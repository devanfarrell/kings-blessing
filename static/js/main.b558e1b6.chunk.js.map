{"version":3,"sources":["audio/kings_blessing_fail.wav","audio/kings_blessing_success.wav","audio/kings_blessing_tick.mp3","theme.ts","views/kingsBlessing/center/crownSvg.tsx","redux/slices/kingsBlessing/state.ts","redux/slices/kingsBlessing/selection.ts","audio/index.js","redux/slices/kingsBlessing/selectionHelpers.ts","views/kingsBlessing/center/index.tsx","components/circle.tsx","utility.tsx","views/kingsBlessing/edge/kingsCircles.tsx","views/kingsBlessing/edge/queensCircles.tsx","views/kingsBlessing/hooks.ts","views/kingsBlessing/edge/index.tsx","views/kingsBlessing/fields/cows.tsx","views/kingsBlessing/fields/wheat.tsx","views/kingsBlessing/fields/lumber.tsx","views/kingsBlessing/fields/pigs.tsx","views/kingsBlessing/fields/fruit.tsx","views/kingsBlessing/fields/water.tsx","views/kingsBlessing/fields/wool.tsx","views/kingsBlessing/fields/index.tsx","views/kingsBlessing/dice/gold.tsx","views/kingsBlessing/dice/purple.tsx","atoms/button.tsx","views/kingsBlessing/dice/index.tsx","views/kingsBlessing/dice/useDice.ts","views/kingsBlessing/index.tsx","redux/slices/kingsBlessing/index.ts","redux/provider.tsx","fontAwesome.ts","index.tsx"],"names":["module","exports","globalStyles","css","colors","Crown","player","color","viewBox","width","transform","fill","fillRule","stroke","strokeWidth","d","strokeLinecap","strokeLinejoin","strokeOpacity","initialState","turn","numerator","denominator","goldDie","purpleDie","haveRerolledGoldDie","haveRerolledPurpleDie","rollPurpleDie","Math","round","random","rollGoldDie","Selection","stateSlice","createSlice","cloneDeep","switchPlayers","createAction","draft","nextTurn","Object","keys","forEach","key","rollDice","rerollGoldDie","rerollPurpleDie","selectState","selectTurn","createSelector","state","selectGoldDie","selectPurpleDie","selectHaveRerolled","gold","purple","kingsBlessingFailSound","UIFx","kingsBlessingFailFile","volume","kingsBlessingSuccessSound","kingsBlessingSuccessFile","kingsBlessingClickSound","kingsBlessingClickFile","initializationUtil","circleCount","fraction","Array","map","unselected","fieldsInitialState","cows","wheat","lumber","pigs","fruit","water","wool","king","finalized","queen","selectionReduce","accumulator","currentValue","selected","submitAbstraction","presentationOrder","playerSelectionSlice","blue","red","claimedField","updateRed","section","circleIndex","sliceIndex","updateBlue","finalizeAnswers","fieldKey","circle","slice","i","clearSelectedAnswers","claimField","field","rawSelector","redSelector","blueSelector","selectRedKing","selectBlueKing","selectRedQueen","selectBlueQueen","selectRedField","selectBlueField","selectPresentationOrder","genericImplementationMatch","fields","implementation","modifiedFields","completedFields","entries","circleNumerator","reduce","add","length","includes","push","implementationMatch","number","compare","fieldType","every","filter","type","selectDoesRedImplementationMatch","selectDoesBlueImplementationMatch","canReroll","queenData","kingData","pieSlice","selectCanRedRerollDice","selectCanBlueRerollDice","selectClaimedFields","data","selectOwnedFields","claimedFields","fieldName","genericSuccess","toast","error","info","play","effects","select","didClaimField","put","submitRedAnswer","createSideEffect","submitBlueAnswer","centerStyle","crownSection","Center","owners","useSelector","Circle","style","height","props","accumulativePercent","children","child","nestedArray","access","onClick","percent","finalizedColor","selectedColor","calculatedColor","arr","index","pathString","slicePercent","pi","PI","endRad","start","coordinatesFromRadians","end","x","y","coordinateString","sliceStyle","Slice","radians","cos","sin","clickable","circleWrapper","KingsCircles","team","dispatch","useDispatch","circleCallback","QueensCircles","useFieldData","redKingData","redQueenData","redField","blueKingData","blueQueenData","blueField","allFieldData","fieldData","sliceClickCallback","useCallback","Edge","edges","threeParts","oneThird","partTitle","partDescription","twoThirds","onePart","Cows","playBlock","row","_","j","stupidExtraDiv","Wheat","Pigs","Fruit","Water","Wool","Fields","playArea","Dot","styles","dot","InternalDots","value","Row","justifyContent","Dots","wrapper","GoldDie","uninitialized","PurpleDie","cssStyle","outset","inset","Button","disabled","Dice","useState","expanded","setExpanded","haveRerolled","redCanReroll","blueCanReroll","currentRerollCapabilities","canRerollPurple","canRerollGold","rollDiceAction","rerollPurple","rerollGold","useMemo","useDice","endTurn","positionWrapper","tabRow","tab","icon","size","outerPlayAreaWrapper","innerPlayAreaWrapper","diceWrapper","borderRadius","backgroundColor","kingsBlessingSlice","addSlice","store","createStoreAbstraction","lockSideEffects","getStore","reduxProvider","library","fad","faCheckSquare","faTimes","faAngleDown","faAngleUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b558e1b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kings_blessing_fail.6c497ffb.wav\";","module.exports = __webpack_public_path__ + \"static/media/kings_blessing_success.c54374c9.wav\";","module.exports = __webpack_public_path__ + \"static/media/kings_blessing_tick.eb69c905.mp3\";","import { css } from \"@emotion/core\";\n\nexport const globalStyles = css`\n  html,\n  body {\n    line-height: 2rem;\n    text-transform: initial;\n    letter-spacing: initial;\n    color: #212b36;\n    font-family: \"Open Sans\" sans-serif;\n  }\n\n  html {\n      font-size: 10px;\n      text-size-adject: 100%\n      text-rending: optimizeLegibility;\n  }\n\n  body {\n      font-size: 1.6rem;\n      font-weight: 400;\n      min-height: 100%;\n      margin: 0;\n      padding: 0;\n  }\n\n  *, :after, :before {\n      scrollbar-width: thin;\n      box-sizing: border-box;\n  }\n\n  :focus {\n      outline: none; // Because of this decision, all accessability must be done by hand\n  }\n\n  #modal-container {\n     position: absolute;\n     top: 0;\n     left: 0;\n  }\n`;\n\nexport const colors = {\n  blue: \"#3498db\",\n  red: \"#e74c3c\",\n  lightBlue: \"#a8d3f0\",\n  lightRed: \"#f1968e\",\n  darkRed: \"#881d11\",\n  darkBlue: \"#1b6698\",\n  mutedPurple: \"#8d728b\",\n  purple: \"hsl(261, 60%, 39%)\",\n};\n","import React from \"react\";\nimport { colors } from \"theme\";\n\nexport default function Crown({ player }: { player: \"red\" | \"blue\" | null }) {\n  const redBlue = player === \"red\" ? colors.red : colors.blue;\n  const color = player ? redBlue : colors.purple;\n\n  return (\n    <svg viewBox=\"0 0 167 117\" width=\"40%\">\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"translate(0 144.227)\">\n          <g\n            fill=\"#EAC102\"\n            fillRule=\"nonzero\"\n            stroke=\"#010101\"\n            strokeWidth=\"2.49\"\n            transform=\"matrix(-.41158 -.00392 .00086 .39233 1614.02 -145.774)\"\n          >\n            <path d=\"M3613.78 1143.32c-3.13 5.47-7.25 10.74-14.06 15.66l-60.13-62.66c6.57-9.4 8.38-14.17 7.83-25.02-2.06-41.23-88.01-93.986-199.12-112.531-110.84-18.497-299.4-119.1-356.21-99.125l22.02-36.33c21.57 1.277 75 34.328 103.18 40.941 14.59 5.105 29.45 10.403 44.91 16.169 37.38 13.938 76.37 29.1 113.01 41.913 18.32 6.406 36.07 12.197 52.67 16.997 8.3 2.4 16.36 4.558 24.03 6.391 7.68 1.834 15 3.385 21.93 4.542 13.89 2.318 27.35 5.192 40.32 8.606a429.268 429.268 0 0137.31 11.675c11.83 4.298 23.01 8.94 33.47 13.91 10.46 4.97 20.17 10.244 29.04 15.672 8.87 5.43 16.89 11.02 23.95 16.7 7.05 5.68 13.17 11.45 18.18 17.17 5.01 5.71 8.92 11.41 11.66 16.95 1.38 2.77 2.5 5.52 3.26 8.21.77 2.69 1.19 5.28 1.32 7.86.28 5.42-.04 9.32-1.24 13.04-1.2 3.73-3.31 7.27-6.59 11.97l49.26 51.29z\"></path>\n            <path d=\"M3613.78 1143.32l-49.26-51.29c3.28-4.7 5.39-8.24 6.59-11.97 1.2-3.72 1.52-7.62 1.24-13.04-.13-2.58-.55-5.17-1.32-7.86-.76-2.69-1.88-5.44-3.26-8.21-2.74-5.54-6.65-11.24-11.66-16.95-5.01-5.72-11.13-11.49-18.18-17.17-7.06-5.68-15.08-11.27-23.95-16.7-8.87-5.428-18.58-10.702-29.04-15.672-10.46-4.97-21.64-9.612-33.47-13.91a429.268 429.268 0 00-37.31-11.675c-12.97-3.414-26.43-6.288-40.32-8.606-6.93-1.157-14.25-2.708-21.93-4.542-7.67-1.833-15.73-3.991-24.03-6.391-16.6-4.8-34.35-10.591-52.67-16.997-36.64-12.813-75.63-27.975-113.01-41.913-15.46-5.766-30.32-11.064-44.91-16.169 88.12 20.676 198.86 60.241 271.16 73.768 118.33 22.139 232.05 93.257 232.33 165.257.06 14.8-.12 28.06-7 40.04z\"></path>\n          </g>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -931.646 211.798)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -961.495 221.623)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -992.657 230.4)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1025.31 238.547)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1057.14 246.076)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1089.54 255.303)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1121.97 269.363)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1147.42 291.26)\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(-1 0 0 1 764.286 144.227)\">\n          <g\n            fill=\"#EAC102\"\n            fillRule=\"nonzero\"\n            stroke=\"#010101\"\n            strokeWidth=\"2.49\"\n            transform=\"matrix(-.41158 -.00392 .00086 .39233 1614.02 -145.774)\"\n          >\n            <path d=\"M3613.78 1143.32c-3.13 5.47-7.25 10.74-14.06 15.66l-60.13-62.66c6.57-9.4 8.38-14.17 7.83-25.02-2.06-41.23-88.01-93.986-199.12-112.531-110.84-18.497-299.4-119.1-356.21-99.125l22.02-36.33c21.57 1.277 75 34.328 103.18 40.941 14.59 5.105 29.45 10.403 44.91 16.169 37.38 13.938 76.37 29.1 113.01 41.913 18.32 6.406 36.07 12.197 52.67 16.997 8.3 2.4 16.36 4.558 24.03 6.391 7.68 1.834 15 3.385 21.93 4.542 13.89 2.318 27.35 5.192 40.32 8.606a429.268 429.268 0 0137.31 11.675c11.83 4.298 23.01 8.94 33.47 13.91 10.46 4.97 20.17 10.244 29.04 15.672 8.87 5.43 16.89 11.02 23.95 16.7 7.05 5.68 13.17 11.45 18.18 17.17 5.01 5.71 8.92 11.41 11.66 16.95 1.38 2.77 2.5 5.52 3.26 8.21.77 2.69 1.19 5.28 1.32 7.86.28 5.42-.04 9.32-1.24 13.04-1.2 3.73-3.31 7.27-6.59 11.97l49.26 51.29z\"></path>\n            <path d=\"M3613.78 1143.32l-49.26-51.29c3.28-4.7 5.39-8.24 6.59-11.97 1.2-3.72 1.52-7.62 1.24-13.04-.13-2.58-.55-5.17-1.32-7.86-.76-2.69-1.88-5.44-3.26-8.21-2.74-5.54-6.65-11.24-11.66-16.95-5.01-5.72-11.13-11.49-18.18-17.17-7.06-5.68-15.08-11.27-23.95-16.7-8.87-5.428-18.58-10.702-29.04-15.672-10.46-4.97-21.64-9.612-33.47-13.91a429.268 429.268 0 00-37.31-11.675c-12.97-3.414-26.43-6.288-40.32-8.606-6.93-1.157-14.25-2.708-21.93-4.542-7.67-1.833-15.73-3.991-24.03-6.391-16.6-4.8-34.35-10.591-52.67-16.997-36.64-12.813-75.63-27.975-113.01-41.913-15.46-5.766-30.32-11.064-44.91-16.169 88.12 20.676 198.86 60.241 271.16 73.768 118.33 22.139 232.05 93.257 232.33 165.257.06 14.8-.12 28.06-7 40.04z\"></path>\n          </g>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -931.646 211.798)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -961.495 221.623)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -992.657 230.4)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1025.31 238.547)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1057.14 246.076)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1089.54 255.303)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1121.97 269.363)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.3\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"matrix(.43118 .00432 .00091 .43977 -1147.42 291.26)\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g stroke=\"#000\" strokeWidth=\"1.3\" transform=\"matrix(.7031 .0129 -.0075 .83757 113.233 307.231)\">\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M345.731 1.41c-5.852 0-10.596 4.725-10.596 10.554 0 5.828 4.744 10.566 10.596 10.566 5.851 0 10.609-4.738 10.609-10.566 0-5.829-4.758-10.554-10.609-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M325.883 14.077c-5.851 0-10.596 4.725-10.596 10.554 0 5.828 4.745 10.566 10.596 10.566 5.852 0 10.609-4.738 10.609-10.566 0-5.829-4.757-10.554-10.609-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M304.744 26.481c-5.851 0-10.609 4.725-10.609 10.554 0 5.828 4.758 10.566 10.609 10.566 5.852 0 10.596-4.738 10.596-10.566 0-5.829-4.744-10.554-10.596-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M283.724 36.562c-5.852 0-10.609 4.725-10.609 10.554 0 5.828 4.757 10.566 10.609 10.566s10.596-4.738 10.596-10.566c0-5.829-4.744-10.554-10.596-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M262.058 46.643c-5.852 0-10.609 4.725-10.609 10.554 0 5.828 4.757 10.553 10.609 10.553s10.596-4.725 10.596-10.553c0-5.829-4.744-10.554-10.596-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M240.392 57.617c-5.852 0-10.609 4.738-10.609 10.566 0 5.829 4.757 10.554 10.609 10.554s10.596-4.725 10.596-10.554c0-5.828-4.744-10.566-10.596-10.566z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M219.24 70.809c-5.852 0-10.609 4.725-10.609 10.553 0 5.828 4.757 10.554 10.609 10.554 5.851 0 10.595-4.726 10.595-10.554s-4.744-10.553-10.595-10.553z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M200.552 90.708c-5.852 0-10.596 4.725-10.596 10.553 0 5.829 4.744 10.567 10.596 10.567s10.609-4.738 10.609-10.567c0-5.828-4.757-10.553-10.609-10.553z\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            d=\"M371.438-6.813c-6.234.084-12.282 1.885-12.282 5.625-97.228 79.468-146.623 65.594-172.562 117.032 11.169 15.273.058 38.155 12.219 69l10.937 1.406c-.462-23.088-3.481-47.54 13.969-60.875 8.276-43.992 73.139-50.505 147.531-113.437l.188-18.751z\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g stroke=\"#000\" strokeWidth=\"1.3\" transform=\"matrix(-.7031 .0129 .0075 .83757 651.052 307.231)\">\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M345.731 1.41c-5.852 0-10.596 4.725-10.596 10.554 0 5.828 4.744 10.566 10.596 10.566 5.851 0 10.609-4.738 10.609-10.566 0-5.829-4.758-10.554-10.609-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M325.883 14.077c-5.851 0-10.596 4.725-10.596 10.554 0 5.828 4.745 10.566 10.596 10.566 5.852 0 10.609-4.738 10.609-10.566 0-5.829-4.757-10.554-10.609-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M304.744 26.481c-5.851 0-10.609 4.725-10.609 10.554 0 5.828 4.758 10.566 10.609 10.566 5.852 0 10.596-4.738 10.596-10.566 0-5.829-4.744-10.554-10.596-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M283.724 36.562c-5.852 0-10.609 4.725-10.609 10.554 0 5.828 4.757 10.566 10.609 10.566s10.596-4.738 10.596-10.566c0-5.829-4.744-10.554-10.596-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M262.058 46.643c-5.852 0-10.609 4.725-10.609 10.554 0 5.828 4.757 10.553 10.609 10.553s10.596-4.725 10.596-10.553c0-5.829-4.744-10.554-10.596-10.554z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M240.392 57.617c-5.852 0-10.609 4.738-10.609 10.566 0 5.829 4.757 10.554 10.609 10.554s10.596-4.725 10.596-10.554c0-5.828-4.744-10.566-10.596-10.566z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M219.24 70.809c-5.852 0-10.609 4.725-10.609 10.553 0 5.828 4.757 10.554 10.609 10.554 5.851 0 10.595-4.726 10.595-10.554s-4.744-10.553-10.595-10.553z\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M200.552 90.708c-5.852 0-10.596 4.725-10.596 10.553 0 5.829 4.744 10.567 10.596 10.567s10.609-4.738 10.609-10.567c0-5.828-4.757-10.553-10.609-10.553z\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            d=\"M371.438-6.813c-6.234.084-12.282 1.885-12.282 5.625-97.228 79.468-146.623 65.594-172.562 117.032 11.169 15.273.058 38.155 12.219 69l10.937 1.406c-.462-23.088-3.481-47.54 13.969-60.875 8.276-43.992 73.139-50.505 147.531-113.437l.188-18.751z\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill={color}\n          fillRule=\"nonzero\"\n          stroke=\"#000\"\n          strokeWidth=\"1\"\n          d=\"M381.367 350.666c31.301 0 75.101 9.431 89.369 18.946 14.267 9.515 26.15 13.444 39.595 16.324 13.444 2.88 21.05 2.614 32.278 1.824 11.228-.791 33.035 6.71 50.024 18.733 16.988 12.022 16.182 24.227 24.713 37.094l-63.869 122.08H210.808l-63.869-122.08c8.569-12.867 8.753-25.072 25.723-37.094 16.969-12.023 38.795-19.524 50.019-18.733 11.223.79 18.836 1.056 32.283-1.824 13.446-2.88 25.327-6.809 39.595-16.324 14.267-9.515 55.507-18.946 86.808-18.946z\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.3205 0 0 .3205 -566.072 383.483)\">\n          <path\n            fill=\"#0071BC\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.91\"\n            d=\"M3028.49-282.327c0 34.99-28.37 63.356-63.36 63.356-34.99 0-63.36-28.366-63.36-63.356 0-34.991 28.37-63.357 63.36-63.357 34.99 0 63.36 28.366 63.36 63.357z\"\n            transform=\"translate(-215.731 19.127) scale(1.07054)\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"3.12\"\n            d=\"M2949.89-447.688v26.282h-24.72v17.375h24.72v54.656h17.34v-54.656h24.72v-17.375h-24.72v-26.282h-17.34z\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"3.12\"\n            d=\"M2945.94-355.156v49.812c-50.94 1.029-59.06 8.196-60.06 9.406a4.386 4.386 0 00-.13-.062v25.5s.13-.079.16-.094c.33.372 1.81 1.76 6.81 3.438-.19-.769-.44-1.502-.6-2.281a80.026 80.026 0 01-.62-3.532c8.48-2.881 27.78-7.25 67.06-7.25 39.48 0 58.65 4.337 67.06 7.219-.17 1.2-.38 2.388-.62 3.563-.16.789-.4 1.533-.59 2.312 5.02-1.686 6.48-3.093 6.81-3.469.02.016.16.094.16.094V-296s-.1.045-.13.062c-.98-1.211-8.92-8.38-60.06-9.406v-49.812h-25.25z\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(-.41119 -.03478 -.03806 .43287 1592.5 509.597)\">\n          <g\n            fill=\"#EAC102\"\n            fillRule=\"nonzero\"\n            stroke=\"#010101\"\n            strokeWidth=\"0.9\"\n            transform=\"matrix(-3.6417 .29042 .34278 1.8476 9955.71 -617.018)\"\n          >\n            <path d=\"M2040.53-9.342c.32 5.403.42 12.814-1.84 16.998-2.8 5.172-2.64 5.524-6.07 9.05l-14.87-31.749c2.13-2.283 3.36-.529 3.4-7.108.1-15.848-25.09-22.134-46.93-27.7-27.04-6.892-61.9-44.24-73.06-30.866 3.71-7.763 11.54-8.444 21.34-6.033.25.136.45.191.7.331 3.48 1.949 7.19 4.197 11 6.585 3.82 2.389 7.73 4.915 11.7 7.359 3.97 2.443 7.97 4.801 11.92 6.916 3.96 2.115 7.88 3.97 11.63 5.372 1.88.701 3.69 1.278 5.48 1.729 1.79.451 3.57.767 5.26.92 3.43.31 6.8.881 10.08 1.655a73.31 73.31 0 019.5 2.944c3.04 1.172 5.95 2.507 8.68 4.01a62.092 62.092 0 017.58 4.93 48.75 48.75 0 016.21 5.629c1.82 1.962 3.38 3.979 4.6 6.071 1.23 2.091 2.11 4.247 2.65 6.401.55 2.154.74 4.326.52 6.475-.8 11.374-1.38 5.223-5.1 8.829l9.84 16.3c1.38-1.57 2.48-3.431 3.35-5.519.87-2.088 1.54-4.385 2.02-6.733.2-.924.26-1.859.41-2.796z\"></path>\n            <path d=\"M2040.53-9.342c-.15.937-.21 1.872-.41 2.796-.48 2.348-1.15 4.645-2.02 6.733-.87 2.088-1.97 3.949-3.35 5.519l-10.35-17.093c5.43 1.429 6.37-9.208 5.09-14.511-.54-2.154-1.42-4.31-2.65-6.401-1.22-2.092-2.78-4.109-4.6-6.071a48.75 48.75 0 00-6.21-5.629 62.092 62.092 0 00-7.58-4.93c-2.73-1.503-5.64-2.838-8.68-4.01a73.31 73.31 0 00-9.5-2.944 72.224 72.224 0 00-10.08-1.655 34.435 34.435 0 01-5.26-.92 52.098 52.098 0 01-5.48-1.729c-3.75-1.402-7.67-3.257-11.63-5.372-3.95-2.115-7.95-4.473-11.92-6.916-3.97-2.444-7.88-4.97-11.7-7.359-3.81-2.388-7.52-4.636-11-6.585-.25-.14-.45-.195-.7-.331 17.44 4.288 41.13 18.51 59.31 21.044 27.79 3.874 63.66 19.345 58.72 55.96a1.82 1.82 0 000 .404z\"></path>\n          </g>\n          <g>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-206.546 -89.83) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-460.543 -22.949) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-512.693 -6.357) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-553.636 27.865) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-256.013 -73.325) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-305.38 -56.043) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-355.976 -44.71) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-406.679 -33.944) scale(1.04762)\"\n            ></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.41119 -.03478 .03806 .43287 -828.214 509.597)\">\n          <g\n            fill=\"#EAC102\"\n            fillRule=\"nonzero\"\n            stroke=\"#010101\"\n            strokeWidth=\"0.9\"\n            transform=\"matrix(-3.6417 .29042 .34278 1.8476 9955.71 -617.018)\"\n          >\n            <path d=\"M2040.53-9.342c.32 5.403.42 12.814-1.84 16.998-2.8 5.172-2.64 5.524-6.07 9.05l-14.87-31.749c2.13-2.283 3.36-.529 3.4-7.108.1-15.848-25.09-22.134-46.93-27.7-27.04-6.892-61.9-44.24-73.06-30.866 3.71-7.763 11.54-8.444 21.34-6.033.25.136.45.191.7.331 3.48 1.949 7.19 4.197 11 6.585 3.82 2.389 7.73 4.915 11.7 7.359 3.97 2.443 7.97 4.801 11.92 6.916 3.96 2.115 7.88 3.97 11.63 5.372 1.88.701 3.69 1.278 5.48 1.729 1.79.451 3.57.767 5.26.92 3.43.31 6.8.881 10.08 1.655a73.31 73.31 0 019.5 2.944c3.04 1.172 5.95 2.507 8.68 4.01a62.092 62.092 0 017.58 4.93 48.75 48.75 0 016.21 5.629c1.82 1.962 3.38 3.979 4.6 6.071 1.23 2.091 2.11 4.247 2.65 6.401.55 2.154.74 4.326.52 6.475-.8 11.374-1.38 5.223-5.1 8.829l9.84 16.3c1.38-1.57 2.48-3.431 3.35-5.519.87-2.088 1.54-4.385 2.02-6.733.2-.924.26-1.859.41-2.796z\"></path>\n            <path d=\"M2040.53-9.342c-.15.937-.21 1.872-.41 2.796-.48 2.348-1.15 4.645-2.02 6.733-.87 2.088-1.97 3.949-3.35 5.519l-10.35-17.093c5.43 1.429 6.37-9.208 5.09-14.511-.54-2.154-1.42-4.31-2.65-6.401-1.22-2.092-2.78-4.109-4.6-6.071a48.75 48.75 0 00-6.21-5.629 62.092 62.092 0 00-7.58-4.93c-2.73-1.503-5.64-2.838-8.68-4.01a73.31 73.31 0 00-9.5-2.944 72.224 72.224 0 00-10.08-1.655 34.435 34.435 0 01-5.26-.92 52.098 52.098 0 01-5.48-1.729c-3.75-1.402-7.67-3.257-11.63-5.372-3.95-2.115-7.95-4.473-11.92-6.916-3.97-2.444-7.88-4.97-11.7-7.359-3.81-2.388-7.52-4.636-11-6.585-.25-.14-.45-.195-.7-.331 17.44 4.288 41.13 18.51 59.31 21.044 27.79 3.874 63.66 19.345 58.72 55.96a1.82 1.82 0 000 .404z\"></path>\n          </g>\n          <g>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-206.546 -89.83) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-460.543 -22.949) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-512.693 -6.357) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-553.636 27.865) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-256.013 -73.325) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-305.38 -56.043) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-355.976 -44.71) scale(1.04762)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.25\"\n              d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n              transform=\"translate(-406.679 -33.944) scale(1.04762)\"\n            ></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g\n          fill=\"#EAC102\"\n          fillRule=\"nonzero\"\n          stroke=\"#000\"\n          strokeWidth=\"1.03\"\n          transform=\"matrix(.97438 0 0 .96257 -1463.39 393.642)\"\n        >\n          <path d=\"M1883.55-88.131c-4.34 2.063-7.71 5.139-8.79 8.952-1.25 5.825-2.04 12.476-2.18 19.54-.02.734.04 1.449.04 2.171 0 .836-.2 1.734-.22 2.587-.35 14.821-2.98 27.916-6.77 35.927l28.59 21.651 28.29-21.651c-3.77-8.011-6.41-21.106-6.73-35.927-.02-.853-.23-1.751-.26-2.587 0-.722.09-1.437.07-2.171-.17-7.064-.93-13.715-2.17-19.54-1.11-3.859-4.47-6.982-8.79-9.041.3 2.608.68 5.104.74 8 .01.472-.04.935-.04 1.398.01.537.1 32.524.11 33.072.08 4.756.49 9.244 1.1 13.175.62 3.931 1.44 7.303 2.43 9.874l-14.83 13.918-14.97-13.918c.99-2.571 1.85-5.943 2.46-9.874.62-3.931.98-8.419 1.07-13.175.01-.548.15-32.535.15-33.072 0-.463-.05-.926-.04-1.398.05-2.865.44-5.328.74-7.911h0z\"></path>\n          <path d=\"M1883.55-88.131c-.29 2.583-.69 5.046-.74 7.911-.01.472.04.935.04 1.398 0 .537-.14 32.524-.15 33.072-.09 4.756-.45 9.244-1.07 13.175-.61 3.931-1.47 7.303-2.46 9.874l14.97 13.918 14.83-13.918c-.99-2.571-1.81-5.943-2.43-9.874-.61-3.931-1.02-8.419-1.1-13.175-.01-.548-.1-32.535-.11-33.072 0-.463.04-.926.04-1.398-.06-2.896-.44-5.392-.74-8-3.06-1.456-6.53-2.439-10.37-2.439h-.04c-3.91 0-7.52 1.027-10.67 2.528h0z\"></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.46092 0 0 .49469 -981.41 428.201)\">\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -91.48) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -76.546) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -63.623) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -55.87) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -49.265) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -41.224) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 -27.44) scale(1.04762)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M2983.17-135.392c0 13.323-10.8 24.123-24.12 24.123-13.33 0-24.13-10.8-24.13-24.123 0-13.322 10.8-24.123 24.13-24.123 13.32 0 24.12 10.801 24.12 24.123z\"\n            transform=\"translate(-141.625 4.437) scale(1.04762)\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g fill=\"#EAC102\" stroke=\"#000\" strokeWidth=\"2.61\" transform=\"matrix(.39263 0 0 .3725 -778.843 429.599)\">\n          <g>\n            <path d=\"M2417.1 230.144c20.68 40.491 45.41 92.369 64.52 86.024 4.12-1.736 5.46-11.816-.7-44.423l-37.37-73.684c-5.18-8.376-19.87-2.033-20.81 6.699l-5.64 25.384z\"></path>\n            <path d=\"M2448.75 274.906l6.81-19.968c-13.81-17.775-35.16-50.182-58.03-90.469-4.73-8.337-20.92-3.418-17.06 5.844 30.87 58.461 52.8 89.216 68.28 104.593z\"></path>\n          </g>\n          <g>\n            <path d=\"M3496.76 230.144c-20.67 40.491-45.4 92.369-64.52 86.024-4.12-1.736-5.46-11.816.71-44.423l37.37-73.684c5.17-8.376 19.86-2.033 20.8 6.699l5.64 25.384z\"></path>\n            <path d=\"M3458.09 255.188l6.82 19.968c15.48-15.301 37.48-46.099 68.5-104.843 3.86-9.262-12.34-14.181-17.07-5.844-22.97 40.476-44.44 73-58.25 90.719z\"></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g stroke=\"#000\" transform=\"matrix(1 0 0 .94872 -950.952 315.763)\">\n          <g transform=\"matrix(.39263 0 0 .36765 172.098 125.471)\">\n            <path\n              fill=\"#EAC102\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.7\"\n              d=\"M2259.22-21.284l13.51-10.699c38.73-10.032 73.26 26.827 73.03 42.666 9.68-8.806 19.36-5.788 29.04-5.28-5.73 18.921-.14 33.015-6.87 53.325 8.97 2.784 15.99 6.738 17.95 13.727l8.98-5.808 11.09-.528c2.12 52.754-15.08 41.159-11.62 60.717l18.48-22.703 20.06 2.112c9.82 1.864 12.63 13.462 23.23 14.783-7.48 10.116-12.03 27.911-19 40.126-8.56 6.212-16.08 5.173-23.23 1.583 23.33 8.588 29.45 28.738 38.54 39.598-9.56.528-18.14 1.584-22.18 2.112 14.74 21.028 23.16 37.859 37.49 49.629l-8.45 1.584-43.82-21.647-36.96-38.014-45.4-70.219-1.59-110.873c-23.15-11.794-19.6-39.159-72.28-36.191z\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.7\"\n              d=\"M2257.84-20.617c63.05 6.588 63.01 95.73 75.58 148.407l40.32 68.267c25.5 24.638 41.98 55.29 57.75 58.903 15.28 3.5 14.22-3.019 29.76.658-30.43-13.526-16.49-44.747-79.72-63.685 20.44-11.326 20.44 19.878 61.39 10.996-11.23-28.088-35.37-29.443-46.27-39.86 16.71-5.397 18.54 5.342 30.7.458 13.49-5.423 10.38-26.335 21.07-40.318-13.99-6.174-25.37-24.565-42.61-15.578-5.99 4.969-14.81 21.736-24.74 25.657-4.18-22.38 9.87-24.388 12.83-35.736 2.93-11.245-1.76-14.662.92-30.697-45.43 16.762-28.29 47.084-49.04 60.368-.21-32.214 8.9-18.514 25.67-53.954-6.33-9.421-10.79-7.643-16.04-10.538 8.33-18.001.8-28.962 9.62-54.063-16.67-5.572-22.35 3.466-27.03 9.163-1.69-15.592-38.16-65.956-80.16-38.448z\"\n            ></path>\n            <path\n              fill=\"none\"\n              fillRule=\"nonzero\"\n              strokeWidth=\"1.35\"\n              d=\"M2348.03 39.813c-13.44 30.095-12.09 60.189-11.11 90.283m32.64-15.973c-2.71 15.12-12.25 23.4-22.22 31.251m69.44-9.028c-23.95 1.777-25.71 17.052-61.11 22.223m6.94 9.723c17.16 3.444 34.12 7.087 45.84 15.973m-36.81 5.556c23.37 28.197 42.98 30.734 50 45.141\"\n            ></path>\n            <g fillRule=\"nonzero\" strokeWidth=\"2.43\" transform=\"matrix(-.92783 .61043 .61043 .92783 3844.27 -1752.9)\">\n              <path\n                fill=\"#E3E4E5\"\n                d=\"M2069.06 730.688c.23.008.43.093.66.093 12.76 0 23.09-12.766 23.09-28.5s-10.33-28.5-23.09-28.5c-.23 0-.43.086-.66.094v56.813z\"\n              ></path>\n              <path fill=\"#EAC102\" d=\"M2066.29 668.732h6.95v66.529h-6.95c-2.46-25.69-2.87-50.125 0-66.529z\"></path>\n            </g>\n          </g>\n          <g transform=\"matrix(-.39263 0 0 .36765 2494.09 125.471)\">\n            <path\n              fill=\"#EAC102\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.7\"\n              d=\"M2259.22-21.284l13.51-10.699c38.73-10.032 73.26 26.827 73.03 42.666 9.68-8.806 19.36-5.788 29.04-5.28-5.73 18.921-.14 33.015-6.87 53.325 8.97 2.784 15.99 6.738 17.95 13.727l8.98-5.808 11.09-.528c2.12 52.754-15.08 41.159-11.62 60.717l18.48-22.703 20.06 2.112c9.82 1.864 12.63 13.462 23.23 14.783-7.48 10.116-12.03 27.911-19 40.126-8.56 6.212-16.08 5.173-23.23 1.583 23.33 8.588 29.45 28.738 38.54 39.598-9.56.528-18.14 1.584-22.18 2.112 14.74 21.028 23.16 37.859 37.49 49.629l-8.45 1.584-43.82-21.647-36.96-38.014-45.4-70.219-1.59-110.873c-23.15-11.794-19.6-39.159-72.28-36.191z\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.7\"\n              d=\"M2257.84-20.617c63.05 6.588 63.01 95.73 75.58 148.407l40.32 68.267c25.5 24.638 41.98 55.29 57.75 58.903 15.28 3.5 14.22-3.019 29.76.658-30.43-13.526-16.49-44.747-79.72-63.685 20.44-11.326 20.44 19.878 61.39 10.996-11.23-28.088-35.37-29.443-46.27-39.86 16.71-5.397 18.54 5.342 30.7.458 13.49-5.423 10.38-26.335 21.07-40.318-13.99-6.174-25.37-24.565-42.61-15.578-5.99 4.969-14.81 21.736-24.74 25.657-4.18-22.38 9.87-24.388 12.83-35.736 2.93-11.245-1.76-14.662.92-30.697-45.43 16.762-28.29 47.084-49.04 60.368-.21-32.214 8.9-18.514 25.67-53.954-6.33-9.421-10.79-7.643-16.04-10.538 8.33-18.001.8-28.962 9.62-54.063-16.67-5.572-22.35 3.466-27.03 9.163-1.69-15.592-38.16-65.956-80.16-38.448z\"\n            ></path>\n            <path\n              fill=\"none\"\n              fillRule=\"nonzero\"\n              strokeWidth=\"1.35\"\n              d=\"M2348.03 39.813c-13.44 30.095-12.09 60.189-11.11 90.283m32.64-15.973c-2.71 15.12-12.25 23.4-22.22 31.251m69.44-9.028c-23.95 1.777-25.71 17.052-61.11 22.223m6.94 9.723c17.16 3.444 34.12 7.087 45.84 15.973m-36.81 5.556c23.37 28.197 42.98 30.734 50 45.141\"\n            ></path>\n            <g fillRule=\"nonzero\" strokeWidth=\"2.43\" transform=\"matrix(-.92783 .61043 .61043 .92783 3844.27 -1752.9)\">\n              <path\n                fill=\"#E3E4E5\"\n                d=\"M2069.06 730.688c.23.008.43.093.66.093 12.76 0 23.09-12.766 23.09-28.5s-10.33-28.5-23.09-28.5c-.23 0-.43.086-.66.094v56.813z\"\n              ></path>\n              <path fill=\"#EAC102\" d=\"M2066.29 668.732h6.95v66.529h-6.95c-2.46-25.69-2.87-50.125 0-66.529z\"></path>\n            </g>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"#EAC102\"\n          stroke=\"#000\"\n          strokeWidth=\"1\"\n          d=\"M382.192 459.305c-1.369.017-2.752.879-2.798 2.526-1.26 16.304-7.932 41.716-32.699 46.318-24.564 4.565-46.222-30.134-47.14-43.931.014-2.06-1.653-2.86-3.337-2.771-1.909.101-3.847 1.34-3.374 3.166 3.663 18.838-.172 42.833-17.178 47.121-16.935 4.271-35.436-15.77-48.625-40.753-1.221-4.724-8.253-2.873-6.908.594 10.747 25.974 7.116 44.255-.626 48.11-9.402 2.865-29.013-20.002-40.023-40.16-1.873-2.728-8.768-1.311-7.129 2.188 8.013 15.486 15.971 30.969 16.343 46.714-.919-.913-2.109-2.276-3.411-3.865l-2.675 7.439c6.461 6.09 10.052 5.697 11.853 4.086 3.603-3.224 3.674-9.891-1.153-24.748 8.887 8.969 22.857 19.972 31.852 13.91 8.994-6.062 9.823-16.989 9.006-30.219 11.003 13.663 27.733 27.759 42.747 24.259 15.212-3.546 21.852-16.951 23.89-34.002 8.382 15.455 25.655 33.124 46.944 30.417 20.451-2.6 32.199-25.414 34.392-32.92 2.192 7.506 13.952 30.32 34.404 32.92 21.288 2.707 38.55-14.962 46.932-30.417 2.038 17.051 8.677 30.456 23.889 34.002 15.014 3.5 31.744-10.596 42.748-24.259-.818 13.23.011 24.157 9.006 30.219 8.994 6.062 22.965-4.941 31.852-13.91-4.828 14.857-4.757 21.524-1.154 24.748 1.793 1.604 5.362 2.01 11.767-3.993l-2.675-7.438c-1.269 1.545-2.423 2.876-3.325 3.771.372-15.745 8.33-31.228 16.343-46.714 1.639-3.499-5.244-4.916-7.116-2.188-11.01 20.158-30.622 43.025-40.024 40.16-7.741-3.855-11.385-22.136-.638-48.11 1.346-3.467-5.686-5.318-6.908-.594-13.189 24.983-31.678 45.024-48.612 40.753-17.006-4.288-20.854-28.283-17.19-47.121.889-3.438-6.729-4.789-6.7-.395-.917 13.797-22.588 48.496-47.152 43.931-24.766-4.602-31.426-30.014-32.687-46.318.012-1.714-1.343-2.542-2.711-2.526z\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.39263 0 0 .3725 -778.84 429.599)\">\n          <g transform=\"matrix(1 0 0 1.00579 .81 -1346.08)\">\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.61\"\n              d=\"M3198.05 1390.38c0 16.27-13.19 29.46-29.46 29.46-16.27 0-29.46-13.19-29.46-29.46 0-16.27 13.19-29.46 29.46-29.46 16.27 0 29.46 13.19 29.46 29.46z\"\n              transform=\"translate(5.774 34.306)\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeWidth=\"2.61\"\n              d=\"M3153.87 1446.21c10.77 4.06 21.98 5.42 35.22 4.38-.74 7.62-7.85 4.53-6.79 11.03 1.06 6.51-27.32 4.33-24.72-2.54 2.59-6.88-5.08-5.3-3.71-12.87z\"\n            ></path>\n          </g>\n          <g transform=\"matrix(-1 0 0 1.00579 5913.05 -1346.08)\">\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.61\"\n              d=\"M3198.05 1390.38c0 16.27-13.19 29.46-29.46 29.46-16.27 0-29.46-13.19-29.46-29.46 0-16.27 13.19-29.46 29.46-29.46 16.27 0 29.46 13.19 29.46 29.46z\"\n              transform=\"translate(5.774 34.306)\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeWidth=\"2.61\"\n              d=\"M3153.87 1446.21c10.77 4.06 21.98 5.42 35.22 4.38-.74 7.62-7.85 4.53-6.79 11.03 1.06 6.51-27.32 4.33-24.72-2.54 2.59-6.88-5.08-5.3-3.71-12.87z\"\n            ></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.39263 0 0 .3725 -778.818 429.599)\">\n          <g transform=\"matrix(-.9419 .3354 .32973 .93534 4949.33 -2266.45)\">\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.63\"\n              d=\"M3198.05 1390.38c0 16.27-13.19 29.46-29.46 29.46-16.27 0-29.46-13.19-29.46-29.46 0-16.27 13.19-29.46 29.46-29.46 16.27 0 29.46 13.19 29.46 29.46z\"\n              transform=\"translate(5.774 34.306)\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeWidth=\"2.63\"\n              d=\"M3153.87 1446.21c10.77 4.06 21.98 5.42 35.22 4.38-.74 7.62-7.85 4.53-6.79 11.03 1.06 6.51-27.32 4.33-24.72-2.54 2.59-6.88-5.08-5.3-3.71-12.87z\"\n            ></path>\n          </g>\n          <g transform=\"matrix(.9419 .3354 -.32973 .93534 964.412 -2266.45)\">\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.63\"\n              d=\"M3198.05 1390.38c0 16.27-13.19 29.46-29.46 29.46-16.27 0-29.46-13.19-29.46-29.46 0-16.27 13.19-29.46 29.46-29.46 16.27 0 29.46 13.19 29.46 29.46z\"\n              transform=\"translate(5.774 34.306)\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeWidth=\"2.63\"\n              d=\"M3153.87 1446.21c10.77 4.06 21.98 5.42 35.22 4.38-.74 7.62-7.85 4.53-6.79 11.03 1.06 6.51-27.32 4.33-24.72-2.54 2.59-6.88-5.08-5.3-3.71-12.87z\"\n            ></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.39322 0 0 .40309 -781.395 415.77)\">\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeWidth=\"2.51\"\n            d=\"M2841.49 4.131s28.88-5.151 44.5 18.174c15.34 22.918 52.76 20.519 52.76 20.519l-15.83 51.591-102.01-38.694c-.71 0 6.26-9.734 19.35-8.793 13.09.94 20.5 17.833 40.45 9.966l-39.22-52.763z\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeWidth=\"2.51\"\n            d=\"M3076.51 4.131s-28.87-5.151-44.49 18.174c-15.34 22.918-52.76 20.519-52.76 20.519l15.83 51.591 102.01-38.694c.71 0-6.26-9.734-19.35-8.793-13.09.94-20.5 17.833-40.45 9.966l39.21-52.763z\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeWidth=\"2.51\"\n            d=\"M2958.75-131.547c-17.55 18.957-35.43 40.264-36.4 68.266-14.07-14.666-28.15-4.41-42.22-1.782 7.07 9.515-.2 35.592 9.37 53.375-10.24.806-14.86 9.843-21.09 15.219 4.19 15.598 52.05 17.806 60.37 46.313-52.1-5.196-35.6-42.887-87.93-45.719-8.37 43.102 24.96 34.569 27.56 58.031-15.91 2.984-19.89-13.09-33.75-12.437-19.43.914-27.84 22.164-40.13 29.437 18.95 5.16 26.06 23.196 45.07 27.563 10.27 2.359 15.11-15.806 31.15-7.625-15.73 21.825-31.43 15.412-23.47 46.312 59.58 5.258 35.23-35.333 75.07-29.312-60.17 37.023-27.11 51.093-42.22 79.75 31-12.638 42.15-3.991 78.87-30.313 36.73 26.322 47.88 17.675 78.88 30.313-15.11-28.657 17.95-42.727-42.22-79.75 39.84-6.021 15.49 34.57 75.06 29.312 7.97-30.9-7.73-24.487-23.47-46.312 16.05-8.181 20.89 9.984 31.16 7.625 19.01-4.367 26.12-22.403 45.06-27.563-12.28-7.273-20.69-28.523-40.12-29.437-13.86-.653-17.84 15.421-33.75 12.437 2.6-23.462 35.93-14.929 27.56-58.031-52.34 2.832-35.84 40.523-87.94 45.719 8.33-28.507 56.19-30.715 60.38-46.313-6.23-5.376-10.85-14.413-21.1-15.219 9.58-17.783 2.31-43.86 9.38-53.375-14.07-2.628-28.15-12.884-42.22 1.782-.97-28.002-18.86-49.309-36.41-68.266l-.25-.25-.25.25z\"\n          ></path>\n          <path\n            fill=\"none\"\n            fillRule=\"nonzero\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeWidth=\"1.26\"\n            d=\"M2959.41 53.359c-1.82-3.265 0-157.771 0-157.771m-9.51 213.064c-4.7 18.528-21.43 48.188-41.04 58.707m20.6-75.341c-15.56.789-44.36 16.442-55.88 23.786m53.16-30.846c-55.01 4.998-77.46-17.22-94.48-10.296m96.75-5.716s-13.5-3.94-29.34-8.271c-10.18-2.783-16.34-15.241-22.84-22.087m75.04 11.418s-.82-10.302-13.15-39.172c-11.94-27.979-27.47-42.901-27.47-42.901m56.86 140.719c4.7 18.528 21.42 48.188 41.04 58.707m-20.6-75.341c15.56.789 44.36 16.442 55.88 23.786m-53.16-30.846c55.01 4.998 77.46-17.22 94.48-10.296m-96.76-5.716s13.51-3.94 29.35-8.271c10.18-2.783 16.34-15.241 22.84-22.087m-75.04 11.418s.82-10.302 13.14-39.172c11.95-27.979 27.48-42.901 27.48-42.901\"\n          ></path>\n          <g>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"1.98\"\n              d=\"M2989.92 81.517c0 15.218-12.33 27.554-27.55 27.554s-27.56-12.336-27.56-27.554c0-15.218 12.34-27.554 27.56-27.554 15.22 0 27.55 12.336 27.55 27.554z\"\n              transform=\"matrix(1.31145 0 0 1.2234 -925.15 -19.09)\"\n            ></path>\n            <path\n              fill=\"#E3E4E5\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.49\"\n              d=\"M2989.92 81.517c0 15.218-12.33 27.554-27.55 27.554s-27.56-12.336-27.56-27.554c0-15.218 12.34-27.554 27.56-27.554 15.22 0 27.55 12.336 27.55 27.554z\"\n              transform=\"matrix(1.04255 0 0 .97231 -128.572 1.378)\"\n            ></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"#EAC102\"\n          stroke=\"#000\"\n          strokeWidth=\"1\"\n          d=\"M381.968 514.308c-56.612.564-113.875.617-169.475 11.94-12.407 3.739-30.146 5.827-34.803 19.07-1.528 11.062 12.5 15.75 21.263 18.79 41.745 11.963 85.853 12.976 129.105 14.846 67.291 1.289 135.015 1.812 201.807-7.122 18.247-3.365 38.339-5.442 53.344-16.78 8.96-8.379-.958-20.095-10.862-22.504-33.977-12.447-71.036-13.783-106.972-16.317-27.773-1.447-55.595-1.905-83.407-1.923z\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"#EAC102\"\n          stroke=\"#000\"\n          strokeWidth=\"1\"\n          d=\"M382.143 527.905c-30.857 0-56.88.574-78.813 1.571-4.386.2-8.621.422-12.687.652-48.771 2.767-74.923 7.658-88.938 12.126a91.024 91.024 0 00-3.281 1.097c-5.011 1.822-8.093 3.565-9.969 4.981-.368.279-.686.546-.968.801a9.988 9.988 0 00-.75.741c-1.253 1.383-1.219 2.223-1.219 2.223l10.656 36.734h371.938l10.656-36.734s.034-.84-1.219-2.223a9.988 9.988 0 00-.75-.741c-1.714-1.55-4.922-3.596-10.937-5.782-.009-.003-.023.003-.032 0-13.071-4.744-39.351-10.225-92.187-13.223h-.031c-4.066-.23-8.27-.452-12.657-.652-21.933-.997-47.953-1.571-78.812-1.571z\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(.41409 0 0 .39286 -278.313 269.692)\">\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"1.78\"\n            d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n            transform=\"matrix(1.33459 0 0 1.44733 -589.588 -320.197)\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"1.8\"\n            d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n            transform=\"matrix(1.30451 0 0 1.44733 -532.961 -320.197)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.06\"\n            d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n            transform=\"matrix(1.15414 0 0 1.25188 -265.608 -181.999)\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(-.41409 0 0 .39286 1042.6 269.692)\">\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"1.78\"\n            d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n            transform=\"matrix(1.33459 0 0 1.44733 -589.588 -320.197)\"\n          ></path>\n          <path\n            fill=\"#EAC102\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"1.8\"\n            d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n            transform=\"matrix(1.30451 0 0 1.44733 -532.961 -320.197)\"\n          ></path>\n          <path\n            fill=\"#E3E4E5\"\n            stroke=\"#000\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2.06\"\n            d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n            transform=\"matrix(1.15414 0 0 1.25188 -265.608 -181.999)\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g\n          stroke=\"#000\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          transform=\"matrix(-.4051 .07361 0 .39398 1028.61 132.565)\"\n        >\n          <path\n            fill=\"none\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"2.5\"\n            d=\"M1881 701.453l50.39-34.397h3.23l-48.06 34.397H1881z\"\n          ></path>\n          <path\n            fill=\"none\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"2.5\"\n            d=\"M1881 701.453l50.39 34.398h3.23l-48.06-34.398H1881z\"\n          ></path>\n          <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"2.5\" d=\"M1934.69 735.732l45.27-33.397-45.16-35.103\"></path>\n          <g transform=\"translate(2)\">\n            <path\n              fill=\"#008F4C\"\n              strokeWidth=\"2.5\"\n              d=\"M1897.05 701.806l36.16 26.636 35.63-26.812-35.81-26.107-35.98 26.283z\"\n            ></path>\n            <path\n              fill=\"none\"\n              fillRule=\"nonzero\"\n              strokeWidth=\"1.5\"\n              d=\"M1921.37 701.89l19.12 14.028 18.85-14.121-18.94-13.75-19.03 13.843z\"\n            ></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.5\" d=\"M1933.03 728.266l7.5-12.348\"></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.5\" d=\"M1968.31 701.63l-9.04.132\"></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.5\" d=\"M1921.39 701.806h-23.64\"></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.5\" d=\"M1940.49 688.18l-7.46-12.657\"></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g\n          stroke=\"#000\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          transform=\"matrix(.4051 .07361 0 .39398 -264.32 132.565)\"\n        >\n          <path\n            fill=\"none\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"2.5\"\n            d=\"M1881 701.453l50.39-34.397h3.23l-48.06 34.397H1881z\"\n          ></path>\n          <path\n            fill=\"none\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"2.5\"\n            d=\"M1881 701.453l50.39 34.398h3.23l-48.06-34.398H1881z\"\n          ></path>\n          <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"2.5\" d=\"M1934.69 735.732l45.27-33.397-45.16-35.103\"></path>\n          <g transform=\"translate(2)\">\n            <path\n              fill=\"#008F4C\"\n              strokeWidth=\"2.5\"\n              d=\"M1897.05 701.806l36.16 26.636 35.63-26.812-35.81-26.107-35.98 26.283z\"\n            ></path>\n            <path\n              fill=\"none\"\n              fillRule=\"nonzero\"\n              strokeWidth=\"1.25\"\n              d=\"M1921.37 701.89l19.12 14.028 18.85-14.121-18.94-13.75-19.03 13.843z\"\n            ></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.25\" d=\"M1933.03 728.266l7.5-12.348\"></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.25\" d=\"M1968.31 701.63l-9.04.132\"></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.25\" d=\"M1921.39 701.806h-23.64\"></path>\n            <path fill=\"none\" fillRule=\"nonzero\" strokeWidth=\"1.25\" d=\"M1940.49 688.18l-7.46-12.657\"></path>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g fillRule=\"nonzero\" stroke=\"#000\" strokeWidth=\"2.48\" transform=\"matrix(.41409 0 0 .39286 -278.506 268.212)\">\n          <path\n            fill=\"#EAC102\"\n            d=\"M1564.32 669.169h62.2c18.03 0 32.55 15.127 32.55 33.918 0 18.791-14.52 33.918-32.55 33.918h-62.2c-18.03 0-32.55-15.127-32.55-33.918 0-18.791 14.52-33.918 32.55-33.918z\"\n          ></path>\n          <path\n            fill={color}\n            d=\"M1567.44 673.797h55.96a29.224 29.224 0 0129.29 29.29 29.224 29.224 0 01-29.29 29.29h-55.96a29.224 29.224 0 01-29.29-29.29 29.224 29.224 0 0129.29-29.29z\"\n          ></path>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"#EAC102\"\n          stroke=\"#000\"\n          strokeOpacity=\"0\"\n          strokeWidth=\"1\"\n          d=\"M184.49 524.869l-2.7 5.662a44.087 44.087 0 002.054 1.932l1.787-6.72c-.297-.397-.748-.938-1.141-.874zm395.36-.018c-.489.008-.514.023-1.349 1.058l2.09 6.438c.541-.468 1.088-.99 1.618-1.532l-2.359-5.964z\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(1 0 0 .94872 -.513 33.516)\">\n          <g transform=\"translate(-779.603 412.545) scale(.39263)\">\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeWidth=\"2.61\"\n              d=\"M2485.23-95.278l11.52-4.942c34.57-5.265 51.21 33.927 54.43 56.039 13.28-4.462 30.97-9.575 50.87-4.769-4.99 21.105-1.24 24.198-9.14 52.065 19.67 3.835 20.27 10.421 25.84 14.308-24 19.994-59.53 25.641-61.21 50.872l38.55-6.756c18.42-15.235 18.27-45.167 55.25-45.706 3.84 43.714-20.93 30.607-30.21 62.001 29.28 2.385 90.05-2.076 87.84 7.154-27.16 17.734-25.23 23.34-39.35 32.988l-9.14.795c-9.23-4.171-14.69-18.918-28.62-9.936 0-.001 7.7 5.729 29.41 14.705 21.04 8.696 17.09 31.795 17.09 31.795-30.98 4.79-43.31-3.592-56.83-11.128 36.39 26.298 26.45 43.16 46.9 64.386l-5.17-.398c-41.17 2.097-62.12-15.727-89.03-25.039 3.51 11.09-14.96 30.073-20.27 41.334h-3.97l-23.05-54.052c-2.89 7.312-7.28 5.602-11.13 7.154l-24.64-66.373c-16.18-5.513-13.6-17.282-14.71-27.821 3.78.467 3.84-1.298 12.32 1.987l-11.13-27.82-1.98-19.475c4.46 3.016 12.75.931 11.52 11.526 3.02 12.11 7.55 21.206 11.53 31.398l13.11-43.719-24.64-75.514 13.91-5.564c-5.25-17.168 21.44-36.617-15.87-51.495z\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.61\"\n              d=\"M2483.46-94.74c35.63-12.751 57.51 21.597 59.31 50.034 17.09-4.869 34.22-9.218 52.22-3.165-10.99 24.109-.95 37.544-13.19 55.381 21.61 1.835 16.77 6.632 28.48 11.076-33.12 28.566-62.14 22.564-64.34 53.799 53.51-16.481 32.02-29.108 56.96-43.777 11.48-6.978 25.28-11.64 43.25-12.131 3.89 46.68-25.43 32.156-33.23 61.71 26.96-3.66 30.53-19.008 46.75-21.425 16.23-2.417 31.34 15.412 48.72 26.172-31.16 12.186-34.47 37.355-49.91 35.169-14.21-1.735-15.95-12.717-32.9-5.105 15.02 13.401 40.8 11.435 48 40.612-37.25 12.563-63.26-16.926-100.22-17.933 90.79 25.053 57.74 52.674 90.19 72.787-24.84-2.768-45.18 4.394-91.24-22.153 1.29 12.655-15.45 22.542-23.21 38.503-4.8-25.18-29.58-37.667-24.79-77.006-9.42 1.128 5.44 28.681-10.02 29.537-13.07-11.267-14.01-26.456-14.24-36.921-7.56-9.142 2.85 16.596-29.01-24.262-2.82-4.24 1.74-30.704 5.28-32.701 2.59 6.579 5.05 13.443 11.07 13.186-2.1-9.734-4.32-19.391-10.55-26.372-3.3-2.083-2.75-20.071-1.05-31.646 11.32 13.9 3.37 35.375 22.15 39.03-1.12-35.233-31.16-24.405-14.24-58.018-2.29-18.108-2.8-75.551 9.49-53.271-1.06-30.299 12.95-51.707-9.73-61.11z\"\n            ></path>\n            <path\n              fill=\"none\"\n              fillRule=\"nonzero\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"1.31\"\n              d=\"M2515.24 74.655c-15.63-89.021 10.8-115.664-7-158.61m58.44 70.377c-33.82 29.411-41.89 58.822-44.51 88.233m32.59 27.82c43.18 2.934 63.33-17.898 108.1-19.077m-111.28 7.949c34.86-4.957 43.85-24.44 54.85-39.744m-50.08 59.616c28.66.681 53.22 8.826 65.97 18.283m-78.69 5.564c28.69 32.747 46.91 30.587 69.95 44.513m-75.51-45.308c-4.26 25.578 5.81 42.191 8.74 54.847m-31.8-59.616c-3.14 4.54-5.33 10.032-6.35 16.692m-3.98-32.59c-13.09 5.147-11.49-1.485-26.23 1.59m26.23-21.462c-5.3-.841-10.6-3.465-15.9-12.718m21.46-3.18c-3.91-22.834-8.42-46.546-20.66-81.873\"\n            ></path>\n            <g transform=\"matrix(-.748 .5076 .48137 .8832 3520.47 -1419.32)\">\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"1.98\"\n                d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n                transform=\"matrix(1.33459 0 0 1.44733 -589.588 -320.197)\"\n              ></path>\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n                transform=\"matrix(1.30451 0 0 1.44733 -532.961 -320.197)\"\n              ></path>\n              <path\n                fill=\"#E3E4E5\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2.29\"\n                d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n                transform=\"matrix(1.15414 0 0 1.25188 -265.608 -181.999)\"\n              ></path>\n            </g>\n          </g>\n          <g transform=\"matrix(-.39263 0 0 .39263 1544.91 412.545)\">\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeWidth=\"2.61\"\n              d=\"M2485.23-95.278l11.52-4.942c34.57-5.265 51.21 33.927 54.43 56.039 13.28-4.462 30.97-9.575 50.87-4.769-4.99 21.105-1.24 24.198-9.14 52.065 19.67 3.835 20.27 10.421 25.84 14.308-24 19.994-59.53 25.641-61.21 50.872l38.55-6.756c18.42-15.235 18.27-45.167 55.25-45.706 3.84 43.714-20.93 30.607-30.21 62.001 29.28 2.385 90.05-2.076 87.84 7.154-27.16 17.734-25.23 23.34-39.35 32.988l-9.14.795c-9.23-4.171-14.69-18.918-28.62-9.936 0-.001 7.7 5.729 29.41 14.705 21.04 8.696 17.09 31.795 17.09 31.795-30.98 4.79-43.31-3.592-56.83-11.128 36.39 26.298 26.45 43.16 46.9 64.386l-5.17-.398c-41.17 2.097-62.12-15.727-89.03-25.039 3.51 11.09-14.96 30.073-20.27 41.334h-3.97l-23.05-54.052c-2.89 7.312-7.28 5.602-11.13 7.154l-24.64-66.373c-16.18-5.513-13.6-17.282-14.71-27.821 3.78.467 3.84-1.298 12.32 1.987l-11.13-27.82-1.98-19.475c4.46 3.016 12.75.931 11.52 11.526 3.02 12.11 7.55 21.206 11.53 31.398l13.11-43.719-24.64-75.514 13.91-5.564c-5.25-17.168 21.44-36.617-15.87-51.495z\"\n            ></path>\n            <path\n              fill=\"#EAC102\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2.61\"\n              d=\"M2483.46-94.74c35.63-12.751 57.51 21.597 59.31 50.034 17.09-4.869 34.22-9.218 52.22-3.165-10.99 24.109-.95 37.544-13.19 55.381 21.61 1.835 16.77 6.632 28.48 11.076-33.12 28.566-62.14 22.564-64.34 53.799 53.51-16.481 32.02-29.108 56.96-43.777 11.48-6.978 25.28-11.64 43.25-12.131 3.89 46.68-25.43 32.156-33.23 61.71 26.96-3.66 30.53-19.008 46.75-21.425 16.23-2.417 31.34 15.412 48.72 26.172-31.16 12.186-34.47 37.355-49.91 35.169-14.21-1.735-15.95-12.717-32.9-5.105 15.02 13.401 40.8 11.435 48 40.612-37.25 12.563-63.26-16.926-100.22-17.933 90.79 25.053 57.74 52.674 90.19 72.787-24.84-2.768-45.18 4.394-91.24-22.153 1.29 12.655-15.45 22.542-23.21 38.503-4.8-25.18-29.58-37.667-24.79-77.006-9.42 1.128 5.44 28.681-10.02 29.537-13.07-11.267-14.01-26.456-14.24-36.921-7.56-9.142 2.85 16.596-29.01-24.262-2.82-4.24 1.74-30.704 5.28-32.701 2.59 6.579 5.05 13.443 11.07 13.186-2.1-9.734-4.32-19.391-10.55-26.372-3.3-2.083-2.75-20.071-1.05-31.646 11.32 13.9 3.37 35.375 22.15 39.03-1.12-35.233-31.16-24.405-14.24-58.018-2.29-18.108-2.8-75.551 9.49-53.271-1.06-30.299 12.95-51.707-9.73-61.11z\"\n            ></path>\n            <path\n              fill=\"none\"\n              fillRule=\"nonzero\"\n              stroke=\"#000\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"1.31\"\n              d=\"M2515.24 74.655c-15.63-89.021 10.8-115.664-7-158.61m58.44 70.377c-33.82 29.411-41.89 58.822-44.51 88.233m32.59 27.82c43.18 2.934 63.33-17.898 108.1-19.077m-111.28 7.949c34.86-4.957 43.85-24.44 54.85-39.744m-50.08 59.616c28.66.681 53.22 8.826 65.97 18.283m-78.69 5.564c28.69 32.747 46.91 30.587 69.95 44.513m-75.51-45.308c-4.26 25.578 5.81 42.191 8.74 54.847m-31.8-59.616c-3.14 4.54-5.33 10.032-6.35 16.692m-3.98-32.59c-13.09 5.147-11.49-1.485-26.23 1.59m26.23-21.462c-5.3-.841-10.6-3.465-15.9-12.718m21.46-3.18c-3.91-22.834-8.42-46.546-20.66-81.873\"\n            ></path>\n            <g transform=\"matrix(-.748 .5076 .48137 .8832 3520.47 -1419.32)\">\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"1.98\"\n                d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n                transform=\"matrix(1.33459 0 0 1.44733 -589.588 -320.197)\"\n              ></path>\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n                transform=\"matrix(1.30451 0 0 1.44733 -532.961 -320.197)\"\n              ></path>\n              <path\n                fill=\"#E3E4E5\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2.29\"\n                d=\"M1796.35 707.071c0 12.739-10.33 23.065-23.07 23.065s-23.06-10.326-23.06-23.065 10.32-23.066 23.06-23.066c12.74 0 23.07 10.327 23.07 23.066z\"\n                transform=\"matrix(1.15414 0 0 1.25188 -265.608 -181.999)\"\n              ></path>\n            </g>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"none\"\n          fillRule=\"nonzero\"\n          stroke=\"#000\"\n          strokeWidth=\"0.5\"\n          d=\"M293.445 474.442c2.972.323 6.495.05 9.323-.978\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"none\"\n          fillRule=\"nonzero\"\n          stroke=\"#000\"\n          strokeWidth=\"0.5\"\n          d=\"M470.963 474.442c-2.973.323-6.495.05-9.323-.978\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"none\"\n          fillRule=\"nonzero\"\n          stroke=\"#000\"\n          strokeWidth=\"0.5\"\n          d=\"M587.772 490.944c-2.901-.696-6.093-2.136-8.353-4.047\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <path\n          fill=\"none\"\n          fillRule=\"nonzero\"\n          stroke=\"#000\"\n          strokeWidth=\"0.5\"\n          d=\"M176.411 490.944c2.901-.696 6.093-2.136 8.353-4.047\"\n        ></path>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g transform=\"matrix(1 0 0 .94872 -644.358 -52.076)\">\n          <g>\n            <g\n              fillRule=\"nonzero\"\n              stroke=\"#000\"\n              strokeWidth=\"2.18\"\n              transform=\"matrix(-.44839 .14305 .14305 .44839 1663.11 44.925)\"\n            >\n              <path\n                fill={color}\n                d=\"M2069.06 730.688c.23.008.43.093.66.093 12.76 0 23.09-12.766 23.09-28.5s-10.33-28.5-23.09-28.5c-.23 0-.43.086-.66.094v56.813z\"\n              ></path>\n              <path fill=\"#EAC102\" d=\"M2066.29 668.732h6.95v66.529h-6.95c-2.46-25.69-2.87-50.125 0-66.529z\"></path>\n            </g>\n            <g transform=\"matrix(-.45462 .12182 .12182 .45462 1690.4 77.274)\">\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2.18\"\n                d=\"M2030.16 670.594c-6.01 1.755-10.69 15.383-10.69 31.906 0 16.522 4.68 30.119 10.69 31.875l.25.063c.35.083.7.125 1.06.125l10.84-.024v-18.352c.74-4.16 1.16-8.779 1.16-13.687 0-4.908-.42-9.558-1.16-13.719v-18.178l-12.15-.009h0z\"\n              ></path>\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"1.56\"\n                d=\"M2048.38 702.486c0 17.722-2.72 32.089-6.07 32.089s-6.07-14.367-6.07-32.089c0-17.722 2.72-32.088 6.07-32.088s6.07 14.366 6.07 32.088z\"\n                transform=\"matrix(1.97872 0 0 .9941 -1999.37 4.335)\"\n              ></path>\n              <path\n                fill=\"#E3E4E5\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2.18\"\n                d=\"M2042.96 674.401c25.15 7.78 23.55 49.663 0 57.979-16.35-3.472-14.07-57.719 0-57.979z\"\n              ></path>\n            </g>\n          </g>\n          <g transform=\"matrix(-1 0 0 1 2053 0)\">\n            <g\n              fillRule=\"nonzero\"\n              stroke=\"#000\"\n              strokeWidth=\"2.18\"\n              transform=\"matrix(-.44839 .14305 .14305 .44839 1663.11 44.925)\"\n            >\n              <path\n                fill={color}\n                d=\"M2069.06 730.688c.23.008.43.093.66.093 12.76 0 23.09-12.766 23.09-28.5s-10.33-28.5-23.09-28.5c-.23 0-.43.086-.66.094v56.813z\"\n              ></path>\n              <path fill=\"#EAC102\" d=\"M2066.29 668.732h6.95v66.529h-6.95c-2.46-25.69-2.87-50.125 0-66.529z\"></path>\n            </g>\n            <g transform=\"matrix(-.45462 .12182 .12182 .45462 1690.4 77.274)\">\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2.18\"\n                d=\"M2030.16 670.594c-6.01 1.755-10.69 15.383-10.69 31.906 0 16.522 4.68 30.119 10.69 31.875l.25.063c.35.083.7.125 1.06.125l10.84-.024v-18.352c.74-4.16 1.16-8.779 1.16-13.687 0-4.908-.42-9.558-1.16-13.719v-18.178l-12.15-.009h0z\"\n              ></path>\n              <path\n                fill=\"#EAC102\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"1.56\"\n                d=\"M2048.38 702.486c0 17.722-2.72 32.089-6.07 32.089s-6.07-14.367-6.07-32.089c0-17.722 2.72-32.088 6.07-32.088s6.07 14.366 6.07 32.088z\"\n                transform=\"matrix(1.97872 0 0 .9941 -1999.37 4.335)\"\n              ></path>\n              <path\n                fill=\"#E3E4E5\"\n                stroke=\"#000\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2.18\"\n                d=\"M2042.96 674.401c25.15 7.78 23.55 49.663 0 57.979-16.35-3.472-14.07-57.719 0-57.979z\"\n              ></path>\n            </g>\n          </g>\n        </g>\n      </g>\n      <g transform=\"translate(-40.644 -59.035) translate(8.177 -13.54) scale(.30303)\">\n        <g stroke=\"#000\" transform=\"matrix(.92161 0 0 .87435 -846.455 333.896)\">\n          <path\n            fill={color}\n            strokeWidth=\"1.11\"\n            d=\"M1146.98 293.415s40.22-20.435 186.12-20.435c145.41 0 186.11 20.435 186.11 20.435s-34.02 20.436-186.11 20.436c-152.59 0-186.12-20.436-186.12-20.436z\"\n          ></path>\n          <g fill=\"none\" fillRule=\"nonzero\" transform=\"translate(181.952 -177.549)\">\n            <path strokeWidth=\"0.58\" d=\"M1103.77 494.662v-47.281\"></path>\n            <path strokeWidth=\"0.85\" d=\"M1095.22 494.662v-47.281\"></path>\n            <path strokeWidth=\"1.14\" d=\"M1087.15 494.662v-47.281\"></path>\n            <path strokeWidth=\"1.43\" d=\"M1079.14 494.662v-47.281\"></path>\n            <path strokeWidth=\"1.72\" d=\"M1072.01 494.662v-47.281\"></path>\n            <path strokeWidth=\"2.01\" d=\"M1058.41 492.113l-.19-43.034m6.64 43.6v-45.013\"></path>\n            <path strokeWidth=\"2.29\" d=\"M1045.86 490.178V450.53m6.36 40.78l-.19-42.194\"></path>\n            <path strokeWidth=\"2.57\" d=\"M1029.01 487.914v-34.835m5.53 35.401v-36.533m5.69 37.665v-37.95\"></path>\n            <path strokeWidth=\"2.86\" d=\"M1023.11 487.629V453.93\"></path>\n            <path strokeWidth=\"3.15\" d=\"M1017.6 485.931v-31.435\"></path>\n            <path strokeWidth=\"3.44\" d=\"M1011.69 485.08v-29.171\"></path>\n            <path strokeWidth=\"3.72\" d=\"M999.606 482.534l-.188-23.224m6.382 24.356v-26.055\"></path>\n            <path strokeWidth=\"3.93\" d=\"M993.411 480.551v-20.394\"></path>\n            <path strokeWidth=\"4.22\" d=\"M987.738 478.897v-16.983\"></path>\n            <path strokeWidth=\"4.49\" d=\"M981.543 476.633v-13.302\"></path>\n            <path strokeWidth=\"4.76\" d=\"M975.176 475.501v-9.905\"></path>\n            <path strokeWidth=\"5.62\" d=\"M968.437 473.238v-4.813\"></path>\n            <path strokeWidth=\"0.29\" d=\"M1137.8 492.113v-43.315m-14.49 44.732l.19-45.864m-10.75 46.43v-46.715\"></path>\n            <path strokeWidth=\"0.58\" d=\"M1198.51 494.662v-47.281\"></path>\n            <path strokeWidth=\"0.85\" d=\"M1207.07 494.662v-47.281\"></path>\n            <path strokeWidth=\"1.14\" d=\"M1215.14 494.662v-47.281\"></path>\n            <path strokeWidth=\"1.43\" d=\"M1223.14 494.662v-47.281\"></path>\n            <path strokeWidth=\"1.72\" d=\"M1230.27 494.662v-47.281\"></path>\n            <path strokeWidth=\"2.01\" d=\"M1243.88 492.113l.18-43.034m-6.63 43.6v-45.013\"></path>\n            <path strokeWidth=\"2.29\" d=\"M1256.43 490.178V450.53m-6.36 40.78l.19-42.194\"></path>\n            <path strokeWidth=\"2.57\" d=\"M1273.28 487.914v-34.835m-5.53 35.401v-36.533m-5.69 37.665v-37.95\"></path>\n            <path strokeWidth=\"2.86\" d=\"M1279.18 487.629V453.93\"></path>\n            <path strokeWidth=\"3.15\" d=\"M1284.69 485.931v-31.435\"></path>\n            <path strokeWidth=\"3.44\" d=\"M1290.59 485.08v-29.171\"></path>\n            <path strokeWidth=\"3.72\" d=\"M1302.68 482.534l.19-23.224m-6.38 24.356v-26.055\"></path>\n            <path strokeWidth=\"3.93\" d=\"M1308.88 480.551v-20.394\"></path>\n            <path strokeWidth=\"4.22\" d=\"M1314.55 478.897v-16.983\"></path>\n            <path strokeWidth=\"4.49\" d=\"M1320.74 476.633v-13.302\"></path>\n            <path strokeWidth=\"4.76\" d=\"M1327.11 475.501v-9.905\"></path>\n            <path strokeWidth=\"5.62\" d=\"M1333.85 473.238v-4.813\"></path>\n            <path strokeWidth=\"0.29\" d=\"M1164.49 492.113v-43.315m14.49 44.732l-.19-45.864m10.75 46.43v-46.715\"></path>\n          </g>\n          <path\n            fill=\"#EAC102\"\n            strokeWidth=\"1.11\"\n            d=\"M1332.93 258.951c-56.61.595-113.87.658-169.47 12.594-12.41 3.941-30.15 6.135-34.81 20.094-1.53 11.659 12.48 16.608 21.25 19.812 41.74 12.61 85.87 13.685 129.12 15.656 67.29 1.359 134.99 1.886 201.78-7.531 18.25-3.547 38.34-5.737 53.35-17.687 8.96-8.832-.94-21.179-10.85-23.719-33.97-13.12-71.03-14.517-106.96-17.188-27.78-1.525-55.6-2.012-83.41-2.031zm.16 14.031c145.41 0 186.12 20.438 186.12 20.438s-34.03 20.437-186.12 20.437c-152.59 0-186.1-20.437-186.1-20.437s40.19-20.438 186.1-20.438z\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import { createSlice, createSelector } from \"redux-dogma\";\nimport { cloneDeep } from \"lodash\";\n\nexport type GoldDie = 1 | 2 | 3 | 4 | 5 | 6 | null;\nexport type PurpleDie = 1 | 2 | 4 | 8 | 10 | 12 | null;\n\nexport interface StateReducerStructure {\n  turn: number;\n  numerator: number;\n  denominator: number;\n  goldDie: GoldDie;\n  purpleDie: PurpleDie;\n  haveRerolledGoldDie: boolean;\n  haveRerolledPurpleDie: boolean;\n}\n\nconst initialState: StateReducerStructure = {\n  turn: 0,\n  numerator: 0,\n  denominator: 0,\n  goldDie: null,\n  purpleDie: null,\n  haveRerolledGoldDie: false,\n  haveRerolledPurpleDie: false,\n};\n\nfunction rollPurpleDie(): PurpleDie {\n  const randomIndex = Math.round(Math.random() * 7776 - 1) % 6;\n  const purpleDie: Array<PurpleDie> = [1, 2, 4, 8, 10, 12];\n  return purpleDie[randomIndex];\n}\n\nfunction rollGoldDie(): GoldDie {\n  const randomIndex = Math.round(Math.random() * 7776 - 1) % 6;\n  const goldDie: Array<GoldDie> = [1, 2, 3, 4, 5, 6];\n  return goldDie[randomIndex];\n}\n\nexport const stateSlice = createSlice<StateReducerStructure>(\"state\", cloneDeep(initialState));\n\n/**\n * Actions\n */\n\nexport const switchPlayers = stateSlice.createAction(\"switchTurns\", draft => {\n  const nextTurn = (draft.turn + 1) % 2;\n  Object.keys(draft).forEach(key => {\n    draft[key] = initialState[key];\n  });\n  draft.turn = nextTurn;\n  return;\n});\n\nexport const rollDice = stateSlice.createAction(\"rollDice\", draft => {\n  draft.goldDie = rollGoldDie();\n  draft.purpleDie = rollPurpleDie();\n  if (draft.goldDie > draft.purpleDie) {\n    draft.numerator = draft.purpleDie;\n    draft.denominator = draft.goldDie;\n  } else {\n    draft.numerator = draft.goldDie;\n    draft.denominator = draft.purpleDie;\n  }\n  return;\n});\n\nexport const rerollGoldDie = stateSlice.createAction(\"rerollGoldDie\", draft => {\n  draft.haveRerolledGoldDie = true;\n  draft.goldDie = rollGoldDie();\n  if (draft.goldDie > draft.purpleDie) {\n    draft.numerator = draft.purpleDie;\n    draft.denominator = draft.goldDie;\n  } else {\n    draft.numerator = draft.goldDie;\n    draft.denominator = draft.purpleDie;\n  }\n  return;\n});\n\nexport const rerollPurpleDie = stateSlice.createAction(\"rerollPurpleDie\", draft => {\n  draft.haveRerolledPurpleDie = true;\n  draft.purpleDie = rollPurpleDie();\n  if (draft.goldDie > draft.purpleDie) {\n    draft.numerator = draft.purpleDie;\n    draft.denominator = draft.goldDie;\n  } else {\n    draft.numerator = draft.goldDie;\n    draft.denominator = draft.purpleDie;\n  }\n  return;\n});\n\n/**\n * Selectors\n */\n\nexport const selectState = stateSlice.selectState();\n\nexport const selectTurn = createSelector([selectState], (state: StateReducerStructure): \"blue\" | \"red\" => {\n  return state.turn ? \"blue\" : \"red\";\n});\n\nexport const selectGoldDie = createSelector<any, StateReducerStructure, GoldDie>([selectState], state => state.goldDie);\n\nexport const selectPurpleDie = createSelector<any, StateReducerStructure, PurpleDie>(\n  [selectState],\n  state => state.purpleDie\n);\n\nexport const selectHaveRerolled = createSelector<any, StateReducerStructure, { gold: boolean; purple: boolean }>(\n  [selectState],\n  state => ({ gold: state.haveRerolledGoldDie, purple: state.haveRerolledPurpleDie })\n);\n","import { createSlice, createSelector, effects } from \"redux-dogma\";\nimport { StateReducerStructure, selectState, switchPlayers } from \"./state\";\nimport { fraction, add, compare, number } from \"mathjs\";\nimport { toast } from \"react-toastify\";\nimport { kingsBlessingFailSound, kingsBlessingSuccessSound } from \"audio\";\nimport { selectionReduce, generateInitialState } from \"./selectionHelpers\";\n\nexport enum Selection {\n  unselected,\n  selected,\n  finalized,\n}\n\nexport type RedOrBlue = \"red\" | \"blue\";\n\nexport type FieldType = \"cows\" | \"wheat\" | \"lumber\" | \"pigs\" | \"fruit\" | \"water\" | \"wool\";\n\ntype Field = Selection[][];\n\nexport interface Fields {\n  cows: Field;\n  wheat: Field;\n  lumber: Field;\n  pigs: Field;\n  fruit: Field;\n  water: Field;\n  wool: Field;\n  king: Field;\n  queen: Field;\n}\n\ntype ClaimedFields = {\n  [key in FieldType]: null | RedOrBlue;\n};\n\nexport interface ReducerStructure {\n  red: Fields;\n  blue: Fields;\n  claimedField: ClaimedFields;\n}\n\nconst presentationOrder: FieldType[] = [\"cows\", \"wheat\", \"lumber\", \"pigs\", \"fruit\", \"water\", \"wool\"];\n\nexport const playerSelectionSlice = createSlice<ReducerStructure>(\"playerStructure\", generateInitialState());\n\n/***\n *\n * Actions\n *\n */\n\ninterface updateAction {\n  section: string;\n  circleIndex: number;\n  sliceIndex: number;\n}\n\nexport const updateRed = playerSelectionSlice.createAction<updateAction>(\n  \"UPDATE_RED\",\n  (draft: ReducerStructure, { section, circleIndex, sliceIndex }) => {\n    if (draft.red[section][circleIndex][sliceIndex] === Selection.unselected) {\n      draft.red[section][circleIndex][sliceIndex] = Selection.selected;\n    } else if (draft.red[section][circleIndex][sliceIndex] === Selection.selected) {\n      draft.red[section][circleIndex][sliceIndex] = Selection.unselected;\n    }\n  }\n);\n\nexport const updateBlue = playerSelectionSlice.createAction<updateAction>(\n  \"UPDATE_BLUE\",\n  (draft: ReducerStructure, { section, circleIndex, sliceIndex }) => {\n    if (draft.blue[section][circleIndex][sliceIndex] === Selection.unselected) {\n      draft.blue[section][circleIndex][sliceIndex] = Selection.selected;\n    } else if (draft.blue[section][circleIndex][sliceIndex] === Selection.selected) {\n      draft.blue[section][circleIndex][sliceIndex] = Selection.unselected;\n    }\n  }\n);\n\nconst finalizeAnswers = playerSelectionSlice.createAction<RedOrBlue>(\"finalizeAnswers\", (draft, player) => {\n  [...presentationOrder, \"king\", \"queen\"].forEach(fieldKey => {\n    draft[player][fieldKey].forEach(circle =>\n      circle.forEach((slice, i) => {\n        if (slice === Selection.selected) {\n          circle[i] = Selection.finalized;\n        }\n      })\n    );\n  });\n});\n\nconst clearSelectedAnswers = playerSelectionSlice.createAction<RedOrBlue>(\"clearAnswers\", (draft, player) => {\n  [...presentationOrder, \"king\", \"queen\"].forEach(fieldKey => {\n    draft[player][fieldKey].forEach(circle =>\n      circle.forEach((slice, i) => {\n        if (slice === Selection.selected) {\n          circle[i] = Selection.unselected;\n        }\n      })\n    );\n  });\n});\n\nconst claimField = playerSelectionSlice.createAction<{ player: RedOrBlue; field: FieldType }>(\n  \"claimField\",\n  (draft, { player, field }) => {\n    draft.claimedField[field] = player;\n  }\n);\n\n/**\n * Selectors\n */\n\nconst rawSelector = playerSelectionSlice.selectState();\n\nexport const redSelector = createSelector<any, ReducerStructure, Fields>(\n  [rawSelector],\n  (state: ReducerStructure) => state.red\n);\nexport const blueSelector = createSelector<any, ReducerStructure, Fields>(\n  [rawSelector],\n  (state: ReducerStructure) => state.blue\n);\n\nexport const selectRedKing = createSelector<any, Fields, Field>([redSelector], state => state.king);\nexport const selectBlueKing = createSelector<any, Fields, Field>([blueSelector], state => state.king);\n\nexport const selectRedQueen = createSelector<any, Fields, Field>([redSelector], state => state.queen);\nexport const selectBlueQueen = createSelector<any, Fields, Field>([blueSelector], state => state.queen);\n\nexport const selectRedField = createSelector<any, Fields, Fields>([redSelector], state => state);\nexport const selectBlueField = createSelector<any, Fields, Fields>([blueSelector], state => state);\n\nexport const selectPresentationOrder = (): FieldType[] => presentationOrder;\n\ntype ImplementationMatching = { implementationMatch: boolean; completedFields: FieldType[] };\n\nexport function genericImplementationMatch(\n  fields: Fields,\n  numerator: number,\n  denominator: number\n): ImplementationMatching {\n  let implementation = fraction(0, 1);\n  const modifiedFields: FieldType[] = [];\n  let completedFields: FieldType[] = [];\n\n  Object.entries(fields).forEach(([fieldKey, field]: [FieldType, Array<Array<number>>]) => {\n\n    field.forEach(circle => {\n      const circleNumerator = circle.reduce(selectionReduce, 0);\n      if (circleNumerator) {\n        implementation = add(fraction(circleNumerator, circle.length), implementation);\n        if (!modifiedFields.includes(fieldKey)) {\n          modifiedFields.push(fieldKey);\n        }\n      }\n    });\n  });\n\n  const implementationMatch = number(compare(implementation, fraction(numerator, denominator))) === 0;\n\n  if (implementationMatch) {\n    // check the modified fields. If any of them are complete, return it in an object called completed fields\n    const result: Array<FieldType | null> = modifiedFields.map(fieldType =>\n      fields[fieldType].every(circle =>\n        circle.every(implementation => implementation === Selection.finalized || implementation === Selection.selected)\n      )\n        ? fieldType\n        : null\n    );\n    completedFields = result.filter(type => type !== null);\n  }\n\n  return { implementationMatch, completedFields };\n}\n\nconst selectDoesRedImplementationMatch = createSelector<any, Fields, StateReducerStructure, ImplementationMatching>(\n  [redSelector, selectState],\n  (fields, { numerator, denominator }) => {\n    return genericImplementationMatch(fields, numerator, denominator);\n  }\n);\n\nconst selectDoesBlueImplementationMatch = createSelector<any, Fields, StateReducerStructure, ImplementationMatching>(\n  [blueSelector, selectState],\n  (fields, { numerator, denominator }) => {\n    return genericImplementationMatch(fields, numerator, denominator);\n  }\n);\n\nfunction canReroll(queenData: Field, kingData: Field): { purple: boolean; gold: boolean } {\n  const purple = queenData.every(circle => circle.every(pieSlice => pieSlice === Selection.finalized));\n  const gold = kingData.every(circle => circle.every(pieSlice => pieSlice === Selection.finalized));\n  return { purple, gold };\n}\n\nexport const selectCanRedRerollDice = createSelector<any, Field, Field, { purple: boolean; gold: boolean }>(\n  [selectRedQueen, selectRedKing],\n  (queenData, kingData) => canReroll(queenData, kingData)\n);\n\nexport const selectCanBlueRerollDice = createSelector<any, Field, Field, { purple: boolean; gold: boolean }>(\n  [selectBlueQueen, selectBlueKing],\n  (queenData, kingData) => canReroll(queenData, kingData)\n);\n\nconst selectClaimedFields = createSelector<any, ReducerStructure, ClaimedFields>(\n  [rawSelector],\n  data => data.claimedField\n);\n\nexport const selectOwnedFields = createSelector<any, ClaimedFields, Array<null | RedOrBlue>>(\n  [selectClaimedFields],\n  claimedFields => presentationOrder.map(fieldName => claimedFields[fieldName])\n);\n\n/**\n * Sagas\n */\n\nfunction genericSuccess(player: RedOrBlue) {\n  if (player === \"red\") {\n    toast.error(\"Way to go Red!\");\n  } else {\n    toast.info(\"Way to go Blue!\");\n  }\n  kingsBlessingSuccessSound.play();\n}\n\nfunction* submitAbstraction(player: RedOrBlue, implementationMatch: ImplementationMatching) {\n  if (implementationMatch.implementationMatch) {\n    if (implementationMatch.completedFields.length > 0) {\n      const fields: ClaimedFields = yield effects.select(selectClaimedFields);\n      let didClaimField: boolean = false;\n      for (let i of implementationMatch.completedFields) {\n        if (fields[i] === null) {\n          didClaimField = true;\n          yield effects.put(claimField({ player, field: i }));\n          if (player === \"red\") {\n            toast.error(`Red completed the ${i} field!`);\n          } else {\n            toast.info(`Blue completed the ${i} field!`);\n          }\n        }\n      }\n      if (didClaimField) {\n        kingsBlessingSuccessSound.play();\n      } else {\n        genericSuccess(player);\n      }\n    } else {\n      genericSuccess(player);\n    }\n    yield effects.put(finalizeAnswers(player));\n  } else {\n    if (player === \"red\") {\n      toast.error(\"Sorry, better luck next time.\");\n    } else {\n      toast.info(\"Sorry, better luck next time.\");\n    }\n\n    yield effects.put(clearSelectedAnswers(player));\n    kingsBlessingFailSound.play();\n  }\n\n  yield effects.put(switchPlayers());\n}\n\nexport const submitRedAnswer = playerSelectionSlice.createSideEffect(\"submitAnswerRed\", function*() {\n  const implementationMatch: ImplementationMatching = yield effects.select(selectDoesRedImplementationMatch);\n  yield submitAbstraction(\"red\", implementationMatch);\n});\n\nexport const submitBlueAnswer = playerSelectionSlice.createSideEffect(\"submitAnswerBlue\", function*() {\n  const implementationMatch: ImplementationMatching = yield effects.select(selectDoesBlueImplementationMatch);\n  yield submitAbstraction(\"blue\", implementationMatch);\n});\n","import UIFx from \"uifx\";\n\nimport kingsBlessingFailFile from \"./kings_blessing_fail.wav\";\nimport kingsBlessingSuccessFile from \"./kings_blessing_success.wav\";\nimport kingsBlessingClickFile from \"./kings_blessing_tick.mp3\";\n\nconst kingsBlessingFailSound = new UIFx(kingsBlessingFailFile, { volume: 0.8 });\nconst kingsBlessingSuccessSound = new UIFx(kingsBlessingSuccessFile, { volume: 0.8 });\nconst kingsBlessingClickSound = new UIFx(kingsBlessingClickFile, { volume: 0.4 });\n\nexport { kingsBlessingFailSound, kingsBlessingSuccessSound, kingsBlessingClickSound };\n","import { Selection, ReducerStructure, Fields } from \"./selection\";\n\nconst initializationUtil = (circleCount: number, fraction: number): Selection[][] => {\n  const tempArray = new Array(circleCount).fill(0);\n  return tempArray.map(() => new Array(fraction).fill(Selection.unselected));\n};\n\nconst fieldsInitialState = (): Fields => ({\n  cows: initializationUtil(3, 3),\n  wheat: initializationUtil(3, 4),\n  lumber: initializationUtil(2, 5),\n  pigs: initializationUtil(3, 6),\n  fruit: initializationUtil(4, 8),\n  water: initializationUtil(2, 10),\n  wool: initializationUtil(3, 12),\n  king: [\n    [Selection.unselected, Selection.finalized],\n    [Selection.unselected, Selection.unselected, Selection.finalized],\n    [\n      ...Array(3).fill(Selection.finalized),\n      ...Array(2).fill(Selection.unselected),\n      ...Array(3).fill(Selection.finalized),\n    ],\n  ],\n  queen: [\n    [\n      Selection.unselected,\n      Selection.finalized,\n      Selection.unselected,\n      Selection.finalized,\n      Selection.unselected,\n      Selection.finalized,\n    ],\n    [...Array(3).fill(Selection.unselected), ...Array(7).fill(Selection.finalized)],\n    [Selection.finalized, ...Array(10).fill(Selection.unselected), Selection.finalized],\n  ],\n});\n\nexport const generateInitialState = (): ReducerStructure => ({\n  blue: fieldsInitialState(),\n  red: fieldsInitialState(),\n  claimedField: {\n    cows: null,\n    wheat: null,\n    lumber: null,\n    pigs: null,\n    fruit: null,\n    water: null,\n    wool: null,\n  },\n});\n\nexport const selectionReduce = (accumulator: Selection, currentValue: number) =>\n  currentValue === Selection.selected ? accumulator + 1 : accumulator;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useSelector } from \"react-redux\";\nimport Crown from \"./crownSvg\";\nimport { selectOwnedFields } from \"redux/slices/kingsBlessing/selection\";\n\nconst Center = () => {\n  const owners = useSelector(selectOwnedFields);\n  return (\n    <div css={centerStyle}>\n      <div css={crownSection}>\n        <Crown player={owners[0]} />\n      </div>\n      <div css={crownSection}>\n        <Crown player={owners[1]} />\n      </div>\n      <div css={crownSection}>\n        <Crown player={owners[2]} />\n      </div>\n      <div css={crownSection}>\n        <Crown player={owners[3]} />\n      </div>\n      <div css={crownSection}>\n        <Crown player={owners[4]} />\n      </div>\n      <div css={crownSection}>\n        <Crown player={owners[5]} />\n      </div>\n      <div css={crownSection}>\n        <Crown player={owners[6]} />\n      </div>\n    </div>\n  );\n};\n\nconst centerStyle = css`\n  display: flex;\n  flex-direction: row;\n  height: 10%;\n  background-color: #e5ddee;\n  background-image: url(/images/lace.svg);\n`;\n\nconst crownSection = css`\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 auto;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default Center;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Selection } from \"redux/slices/kingsBlessing/selection\";\nimport { accessNestedArray } from \"utility\";\nimport { colors } from \"theme\";\n\nexport default function Circle({ style = { height: \"100%\", width: \"100%\" }, turn, player, data, ...props }) {\n  let accumulativePercent = 0;\n  return (\n    <svg style={style} viewBox=\"-103 -103 206 206\">\n      <g transform=\"rotate(-90)\">\n        {props.children.map((child, i) => {\n          const { access, onClick = null, percent } = child.props;\n\n          const finalizedColor = player === \"red\" ? colors.red : colors.blue;\n          const selectedColor = player === \"red\" ? colors.lightRed : colors.lightBlue;\n          let calculatedColor = \"white\";\n\n          if (access) {\n            const state = accessNestedArray(data, access);\n            calculatedColor = state === Selection.selected ? selectedColor : calculatedColor;\n            calculatedColor = state === Selection.finalized ? finalizedColor : calculatedColor;\n          }\n\n          const color = onClick ? calculatedColor : \"grey\";\n          const pathString = coordinateString(percent, accumulativePercent);\n          accumulativePercent += percent;\n\n          const callback = () => (onClick ? onClick(access) : null);\n          return (\n            <path\n              onClick={callback}\n              css={sliceStyle(!!onClick && turn === player)}\n              key={i}\n              d={pathString}\n              fill={color}\n              strokeWidth=\"3px\"\n              stroke=\"black\"\n            />\n          );\n        })}\n      </g>\n    </svg>\n  );\n}\n\nexport function Slice(props) {\n  // eslint-disable-next-line\n  const { onClick, percent, color = \"orange\" } = props;\n}\n\nfunction coordinatesFromRadians(radians) {\n  const x = Math.cos(radians) * 100;\n  const y = Math.sin(radians) * 100;\n  return { x: x === 0 ? 100 : x, y };\n}\n\nfunction coordinateString(slicePercent, accumulativePercent) {\n  const pi = Math.PI;\n  const startRad = 2 * pi * accumulativePercent;\n  const endRad = 2 * pi * (slicePercent + accumulativePercent);\n  const start = coordinatesFromRadians(startRad);\n  const end = coordinatesFromRadians(endRad);\n  return `M0,0 L${start.x},${start.y} A100,100 0 ${slicePercent >= 0.5 ? 1 : 0},1 ${end.x},${end.y} Z`;\n}\n\nconst sliceStyle = clickable => css`\n  cursor: ${clickable ? \"pointer\" : \"not-allowed\"};\n  background-color: white;\n  transition: background-color ease-in-out 2000ms;\n`;\n","export function accessNestedArray(\n  nestedArray: Array<any>,\n  keyChain: Array<number>\n): any {\n  return keyChain.reduce((arr: any, index: number) => {\n    return arr && arr.length > index ? arr[index] : null;\n  }, nestedArray);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTurn } from \"redux/slices/kingsBlessing/state\";\nimport { updateRed, updateBlue } from \"redux/slices/kingsBlessing/selection\";\nimport { kingsBlessingClickSound } from \"audio\";\n\nconst KingsCircles = ({ kingData, team }) => {\n  const turn = useSelector(selectTurn);\n  const dispatch = useDispatch();\n\n  const circleCallback = access => {\n    if (team === turn) {\n      kingsBlessingClickSound.play();\n      if (team === \"red\") {\n        dispatch(\n          updateRed({\n            section: \"king\",\n            circleIndex: access[0],\n            sliceIndex: access[1],\n          })\n        );\n      } else if (team === \"blue\") {\n        dispatch(\n          updateBlue({\n            section: \"king\",\n            circleIndex: access[0],\n            sliceIndex: access[1],\n          })\n        );\n      }\n    }\n  };\n  return (\n    <div css={circleWrapper}>\n      <Circle data={kingData} turn={turn} player={team} style={{ height: \"90px\", width: \"90px\" }}>\n        <Slice access={[0, 0]} onClick={circleCallback} percent={1 / 2} />\n        <Slice percent={1 / 2} />\n      </Circle>\n      <Circle data={kingData} turn={turn} player={team} style={{ height: \"90px\", width: \"90px\" }}>\n        <Slice access={[1, 0]} onClick={circleCallback} percent={1 / 3} />\n        <Slice access={[1, 1]} onClick={circleCallback} percent={1 / 3} />\n        <Slice percent={1 / 3} />\n      </Circle>\n      <Circle data={kingData} turn={turn} player={team} style={{ height: \"90px\", width: \"90px\" }}>\n        <Slice percent={1 / 8} />\n        <Slice percent={1 / 8} />\n        <Slice percent={1 / 8} />\n        <Slice onClick={circleCallback} percent={1 / 8} access={[2, 3]} />\n        <Slice onClick={circleCallback} percent={1 / 8} access={[2, 4]} />\n        <Slice percent={1 / 8} />\n        <Slice percent={1 / 8} />\n        <Slice percent={1 / 8} />\n      </Circle>\n    </div>\n  );\n};\n\nconst circleWrapper = css`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 100%;\n`;\n\nexport default KingsCircles;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTurn } from \"redux/slices/kingsBlessing/state\";\nimport { updateRed, updateBlue } from \"redux/slices/kingsBlessing/selection\";\nimport { kingsBlessingClickSound } from \"audio\";\n\nconst QueensCircles = ({ queenData, team }) => {\n  const turn = useSelector(selectTurn);\n  const dispatch = useDispatch();\n\n  const circleCallback = access => {\n    if (team === turn) {\n      kingsBlessingClickSound.play();\n      if (team === \"red\") {\n        dispatch(\n          updateRed({\n            section: \"queen\",\n            circleIndex: access[0],\n            sliceIndex: access[1],\n          })\n        );\n      } else if (team === \"blue\") {\n        dispatch(\n          updateBlue({\n            section: \"queen\",\n            circleIndex: access[0],\n            sliceIndex: access[1],\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <div css={circleWrapper}>\n      <Circle data={queenData} turn={turn} player={team} style={{ height: \"90px\", width: \"90px\" }}>\n        <Slice access={[0, 0]} onClick={circleCallback} percent={1 / 6} />\n        <Slice percent={1 / 6} />\n        <Slice access={[0, 2]} onClick={circleCallback} percent={1 / 6} />\n        <Slice percent={1 / 6} />\n        <Slice access={[0, 4]} onClick={circleCallback} percent={1 / 6} />\n        <Slice percent={1 / 6} />\n      </Circle>\n      <Circle data={queenData} turn={turn} player={team} style={{ height: \"90px\", width: \"90px\" }}>\n        <Slice access={[1, 0]} onClick={circleCallback} percent={1 / 10} />\n        <Slice access={[1, 1]} onClick={circleCallback} percent={1 / 10} />\n        <Slice access={[1, 2]} onClick={circleCallback} percent={1 / 10} />\n        <Slice percent={1 / 10} />\n        <Slice percent={1 / 10} />\n        <Slice percent={1 / 10} />\n        <Slice percent={1 / 10} />\n        <Slice percent={1 / 10} />\n        <Slice percent={1 / 10} />\n        <Slice percent={1 / 10} />\n      </Circle>\n      <Circle data={queenData} turn={turn} player={team} style={{ height: \"90px\", width: \"90px\" }}>\n        <Slice percent={1 / 12} />\n        <Slice access={[2, 1]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 2]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 3]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 4]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 5]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 6]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 7]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 8]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 9]} onClick={circleCallback} percent={1 / 12} />\n        <Slice access={[2, 10]} onClick={circleCallback} percent={1 / 12} />\n        <Slice percent={1 / 12} />\n      </Circle>\n    </div>\n  );\n};\n\nconst circleWrapper = css`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 100%;\n`;\n\nexport default QueensCircles;\n","import { useCallback } from \"react\";\nimport { FieldType } from \"redux/slices/kingsBlessing/selection\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTurn } from \"redux/slices/kingsBlessing/state\";\nimport {\n  selectBlueKing,\n  selectBlueQueen,\n  selectBlueField,\n  updateBlue,\n  selectRedKing,\n  selectRedQueen,\n  selectRedField,\n  selectPresentationOrder,\n  updateRed,\n} from \"redux/slices/kingsBlessing/selection\";\nimport { kingsBlessingClickSound } from \"audio\";\n\nexport function useFieldData(player: \"red\" | \"blue\" = \"red\", field?: FieldType) {\n  const dispatch = useDispatch();\n\n  const turn = useSelector(selectTurn);\n  const presentationOrder = useSelector(selectPresentationOrder);\n  // red\n  const redKingData = useSelector(selectRedKing);\n  const redQueenData = useSelector(selectRedQueen);\n  const redField = useSelector(selectRedField);\n  // blue\n  const blueKingData = useSelector(selectBlueKing);\n  const blueQueenData = useSelector(selectBlueQueen);\n  const blueField = useSelector(selectBlueField);\n\n  const kingData = player === \"red\" ? redKingData : blueKingData;\n  const queenData = player === \"red\" ? redQueenData : blueQueenData;\n\n  const allFieldData = player === \"red\" ? redField : blueField;\n  const fieldData = allFieldData[field];\n\n  const sliceClickCallback = useCallback(\n    field => access => {\n      if (player === turn) {\n        kingsBlessingClickSound.play();\n        if (player === \"red\") {\n          dispatch(\n            updateRed({\n              section: field,\n              circleIndex: access[0],\n              sliceIndex: access[1],\n            })\n          );\n        } else if (player === \"blue\") {\n          dispatch(\n            updateBlue({\n              section: field,\n              circleIndex: access[0],\n              sliceIndex: access[1],\n            })\n          );\n        }\n      }\n    },\n    [dispatch, player, turn]\n  );\n\n  return { turn, presentationOrder, kingData, queenData, fieldData, sliceClickCallback };\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport KingsCircles from \"./kingsCircles\";\nimport QueensCircles from \"./queensCircles\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Edge({ player }: { player: \"red\" | \"blue\" }) {\n  const { kingData, queenData } = useFieldData(player);\n\n  return (\n    <div css={edges}>\n      <div css={threeParts}>\n        <div css={oneThird}>\n          <div css={partTitle}>King's Blessing</div>\n          <div css={partDescription}>When Completed, you may re-roll the gold die</div>\n        </div>\n        <div css={twoThirds}>\n          <KingsCircles team={player} kingData={kingData} />\n        </div>\n      </div>\n      <div css={onePart}>\n        <div css={partTitle} />\n      </div>\n      <div css={threeParts}>\n        <div css={oneThird}>\n          <div css={partTitle}>Queen's Blessing</div>\n          <div css={partDescription}>When Completed, you may re-roll the purple die</div>\n        </div>\n        <div css={twoThirds}>\n          <QueensCircles team={player} queenData={queenData} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst oneThird = css`\n  width: 100%;\n`;\n\nconst twoThirds = css`\n  width: 200%;\n`;\n\nconst partTitle = css`\n  font-size: 20px;\n  padding: 10px 0 0 10px;\n`;\n\nconst partDescription = css`\n  font-size: 16px;\n  padding: 5px 0 0 10px;\n`;\n\nconst threeParts = css`\n  display: flex;\n  flex-direction: row;\n  width: 300%;\n  flex: 1 1 auto;\n  background-color: #e5ddee;\n  background-image: url(/images/lace.svg);\n`;\n\nconst onePart = css`\n  width: 10%;\n  flex: 1 1 auto;\n  background-color: #ffdb58;\n`;\n\nconst edges = css`\n  height: 15%;\n  display: flex;\n  flex: direction-row;\n  box-sizing: border-box;\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Cows({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"cows\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n      <div css={row}>\n        <div css={stupidExtraDiv} />\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[2].map((_, j) => {\n            return (\n              <Slice\n                access={[2, j]}\n                key={`2-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[2].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 33%;\n  flex: 1 1 auto;\n`;\n\nconst stupidExtraDiv = css`\n  display: flex;\n  flex: 1 1 auto;\n  width: 50%;\n  @media (max-width: 750px) {\n    width: 0;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Wheat({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"wheat\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n      <div css={row}>\n        <div css={stupidExtraDiv} />\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[2].map((_, j) => {\n            return (\n              <Slice\n                access={[2, j]}\n                key={`2-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[2].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 33%;\n  flex: 1 1 auto;\n`;\n\nconst stupidExtraDiv = css`\n  display: flex;\n  flex: 1 1 auto;\n  width: 50%;\n  @media (max-width: 750px) {\n    width: 0;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Cows({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"lumber\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 33%;\n  flex: 1 1 auto;\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Pigs({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"pigs\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n      <div css={row}>\n        <div css={stupidExtraDiv} />\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[2].map((_, j) => {\n            return (\n              <Slice\n                access={[2, j]}\n                key={`2-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[2].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 33%;\n  flex: 1 1 auto;\n`;\n\nconst stupidExtraDiv = css`\n  display: flex;\n  flex: 1 1 auto;\n  width: 50%;\n  @media (max-width: 750px) {\n    width: 0;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Fruit({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"fruit\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n      <div css={row}>\n        <div css={stupidExtraDiv} />\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[2].map((_, j) => {\n            return (\n              <Slice\n                access={[2, j]}\n                key={`2-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[2].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n      <div css={row}>\n        <div css={stupidExtraDiv} />\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[3].map((_, j) => {\n            return (\n              <Slice\n                access={[2, j]}\n                key={`2-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[3].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 25%;\n  flex: 1 1 auto;\n`;\n\nconst stupidExtraDiv = css`\n  display: flex;\n  flex: 1 1 auto;\n  width: 50%;\n  @media (max-width: 750px) {\n    width: 0;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Water({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"water\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 33%;\n  flex: 1 1 auto;\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Circle, { Slice } from \"components/circle\";\nimport { useFieldData } from \"../hooks\";\n\nexport default function Wool({ player }: { player: \"red\" | \"blue\" }) {\n  const field = \"wool\";\n  const { turn, fieldData, sliceClickCallback } = useFieldData(player, field);\n\n  return (\n    <div css={playBlock}>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[0].map((_, j) => {\n            return (\n              <Slice\n                access={[0, j]}\n                key={`0-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[0].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n      <div css={row}>\n        <div css={stupidExtraDiv} />\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[1].map((_, j) => {\n            return (\n              <Slice\n                access={[1, j]}\n                key={`1-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[1].length}\n              />\n            );\n          })}\n        </Circle>\n      </div>\n      <div css={row}>\n        <Circle data={fieldData} turn={turn} player={player}>\n          {fieldData[2].map((_, j) => {\n            return (\n              <Slice\n                access={[2, j]}\n                key={`2-${j}`}\n                onClick={sliceClickCallback(field)}\n                percent={1 / fieldData[2].length}\n              />\n            );\n          })}\n        </Circle>\n        <div css={stupidExtraDiv} />\n      </div>\n    </div>\n  );\n}\n\nconst playBlock = css`\n  display: flex;\n  flex: 1 1 auto;\n  border: solid 1px black;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px 0;\n`;\n\nconst row = css`\n  display: flex;\n  justify-content: space-evenly;\n  height: 33%;\n  flex: 1 1 auto;\n`;\n\nconst stupidExtraDiv = css`\n  display: flex;\n  flex: 1 1 auto;\n  width: 50%;\n  @media (max-width: 750px) {\n    width: 0;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport Cows from \"./cows\";\nimport Wheat from \"./wheat\";\nimport Lumber from \"./lumber\";\nimport Pigs from \"./pigs\";\nimport Fruit from \"./fruit\";\nimport Water from \"./water\";\nimport Wool from \"./wool\";\n\nexport default function Fields({ player }: { player: \"red\" | \"blue\" }) {\n  return (\n    <div css={playArea}>\n      <Cows player={player} />\n      <Wheat player={player} />\n      <Lumber player={player} />\n      <Pigs player={player} />\n      <Fruit player={player} />\n      <Water player={player} />\n      <Wool player={player} />\n    </div>\n  );\n}\n\nconst playArea = css`\n  display: flex;\n  flex-direction: row;\n  height: 30%;\n  background-color: rgb(147, 167, 84);\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectGoldDie } from \"redux/slices/kingsBlessing/state\";\n\nfunction Dot() {\n  return <div css={styles.dot} />;\n}\n\nfunction InternalDots({ value }) {\n  switch (value) {\n    case 1:\n      return (\n        <Fragment>\n          <Row />\n          <Row style={{ justifyContent: \"center\" }}>\n            <Dot />\n          </Row>\n          <Row />\n        </Fragment>\n      );\n    case 2:\n      return (\n        <Fragment>\n          <Row style={{ justifyContent: \"flex-start\" }}>\n            <Dot />\n          </Row>\n          <Row />\n          <Row style={{ justifyContent: \"flex-end\" }}>\n            <Dot />\n          </Row>\n        </Fragment>\n      );\n    case 3:\n      return (\n        <Fragment>\n          <Row style={{ justifyContent: \"flex-start\" }}>\n            <Dot />\n          </Row>\n          <Row style={{ justifyContent: \"center\" }}>\n            <Dot />\n          </Row>\n          <Row style={{ justifyContent: \"flex-end\" }}>\n            <Dot />\n          </Row>\n        </Fragment>\n      );\n    case 4:\n      return (\n        <Fragment>\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n          <Row />\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n        </Fragment>\n      );\n    case 5:\n      return (\n        <Fragment>\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n          <Row style={{ justifyContent: \"center\" }}>\n            <Dot />\n          </Row>\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n        </Fragment>\n      );\n    case 6:\n      return (\n        <Fragment>\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n          <Row style={{ justifyContent: \"space-between\" }}>\n            <Dot />\n            <Dot />\n          </Row>\n        </Fragment>\n      );\n    default:\n      return (\n        <Fragment>\n          <Row />\n          <Row style={{ justifyContent: \"center\" }}>\n            <Dot />\n          </Row>\n          <Row />\n        </Fragment>\n      );\n  }\n}\n\nfunction Dots({ value }) {\n  return (\n    <div css={styles.wrapper(value == null)}>\n      <InternalDots value={value} />\n    </div>\n  );\n}\n\nfunction Row(props) {\n  return (\n    <div css={styles.row} style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default function GoldDie() {\n  const value = useSelector(selectGoldDie);\n  return <Dots value={value} />;\n}\n\nconst styles = {\n  wrapper: (uninitialized: boolean) => css`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    background: radial-gradient(\n        ellipse farthest-corner at right bottom,\n        hsl(49, 99%, 61%) 0%,\n        hsl(40, 98%, 59%) 8%,\n        hsl(41, 60%, 39%) 30%,\n        hsl(42, 49%, 36%) 40%,\n        transparent 80%\n      ),\n      radial-gradient(\n        ellipse farthest-corner at left top,\n        hsl(0, 0%, 100%) 0%,\n        hsl(60, 100%, 84%) 8%,\n        hsl(44, 54%, 61%) 25%,\n        hsl(41, 50%, 34%) 62.5%,\n        hsl(42, 50%, 34%) 100%\n      );\n    border-radius: 5px;\n    width: 75px;\n    height: 75px;\n    flex-direction: column;\n    ${uninitialized\n      ? `\n        opacity: 0.6\n    `\n      : ``}\n  `,\n  row: css`\n    height: 25px;\n    display: flex;\n    width: 100%;\n  `,\n  dot: css`\n    margin: 5px;\n    width: 15px;\n    height: 15px;\n    border-radius: 10px;\n    background-color: #939498;\n    box-shadow: 0px 0px 13px #231f20 inset;\n  `,\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectPurpleDie } from \"redux/slices/kingsBlessing/state\";\n\nexport default function PurpleDie() {\n  const purpleDie = useSelector(selectPurpleDie);\n  return (\n    <div css={cssStyle.wrapper(purpleDie == null)}>\n      <div css={cssStyle.outset}>{purpleDie || 1}</div>\n      <div css={cssStyle.inset}>{purpleDie || 1}</div>\n    </div>\n  );\n}\n\nconst cssStyle = {\n  wrapper: (uninitialized: boolean) => css`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    background: radial-gradient(\n        ellipse farthest-corner at right bottom,\n        hsl(269, 99%, 61%) 0%,\n        hsl(260, 98%, 59%) 8%,\n        hsl(261, 60%, 39%) 30%,\n        hsl(262, 49%, 36%) 40%,\n        transparent 80%\n      ),\n      radial-gradient(\n        ellipse farthest-corner at left top,\n        hsl(0, 0%, 100%) 0%,\n        hsl(260, 100%, 84%) 8%,\n        hsl(264, 54%, 61%) 25%,\n        hsl(261, 50%, 24%) 62.5%,\n        hsl(262, 50%, 24%) 100%\n      );\n    border-radius: 5px;\n    width: 75px;\n    height: 75px;\n    font-size: 24px;\n    font-weight: bold;\n    flex-direction: column;\n    ${uninitialized\n      ? `\n        opacity: 0.6\n    `\n      : ``}\n  `,\n  inset: css`\n    font: bold 50px arial, sans-serif;\n    color: rgba(255, 255, 255, 0.85);\n    line-height: 0px;\n  `,\n  outset: css`\n    font: bold 50px arial, sans-serif;\n    color: transparent;\n    text-shadow: -1px -1px 2px hsla(262, 50%, 24%, 0.8);\n    line-height: 0px;\n  `,\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\ninterface props {\n  children?: string;\n  onClick: Function;\n  disabled?: boolean;\n}\n\nexport function Button({ children, onClick, disabled = false }: props) {\n  return (\n    <button onClick={onClick} css={styles(disabled)}>\n      {children}\n    </button>\n  );\n}\n\nconst styles = (disabled: boolean) => css`\n  box-sizing: content-box;\n  font-size: 2.5rem;\n  padding: 0.7rem 1.7rem;\n  border-radius: 3rem;\n  background: linear-gradient(\n    45deg,\n    rgba(83, 52, 245, 1),\n    rgba(156, 111, 255, 1)\n  );\n  color: #fff;\n  font-weight: 600;\n  box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.15);\n  transition: 0.8s cubic-bezier(0.2, 1, 0.2, 1);\n  cursor: pointer;\n  border: solid 0.3rem rgba(83, 52, 245, 1);\n  outline: none;\n  font-family: sans-serif;\n  &:hover,\n  active {\n    border-color: #ffffff;\n    box-shadow: 0 15px 30px 0 rgba(0, 0, 0, 0.25);\n  }\n  ${disabled\n    ? `\n    border-color: rgba(113, 103, 135, 0.5); \n    // background: rgba(147, 148, 152, 0.5);\n    background: linear-gradient(45deg, rgba(83, 52, 245, 0.5), rgba(156, 111, 255, 0.5));\n    pointer-events: none;\n  `\n    : ``}\n`;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport GoldDie from \"./gold\";\nimport PurpleDie from \"./purple\";\nimport { submitRedAnswer, submitBlueAnswer } from \"redux/slices/kingsBlessing/selection\";\nimport { Button } from \"atoms\";\nimport useDice from \"./useDice\";\nimport { colors } from \"theme\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Dice() {\n  const [expanded, setExpanded] = useState(true);\n  const dispatch = useDispatch();\n  const { goldDie, purpleDie, turn, rollDice } = useDice();\n  const endTurn = useCallback(() => {\n    if (turn === \"red\") {\n      dispatch(submitRedAnswer());\n    } else {\n      dispatch(submitBlueAnswer());\n    }\n  }, [dispatch, turn]);\n  return (\n    <div css={styles.positionWrapper(turn, expanded)}>\n      {turn === \"red\" && (\n        <div css={styles.tabRow}>\n          <div onClick={() => setExpanded(!expanded)} css={styles.tab(turn, expanded)}>\n            <FontAwesomeIcon color={colors.purple} icon={[\"fad\", \"angle-down\"]} size=\"2x\" />\n          </div>\n        </div>\n      )}\n      <div css={styles.outerPlayAreaWrapper(turn, expanded)}>\n        <div css={styles.innerPlayAreaWrapper}>\n          <div>\n            <Button disabled={!!goldDie && !!purpleDie} onClick={rollDice}>\n              Roll Dice\n            </Button>\n          </div>\n          <div css={styles.diceWrapper(expanded)}>\n            {purpleDie < goldDie && <PurpleDie />}\n            <GoldDie />\n            {purpleDie >= goldDie && <PurpleDie />}\n          </div>\n          <div>\n            <Button disabled={!goldDie && !purpleDie} onClick={endTurn}>\n              End Turn\n            </Button>\n          </div>\n        </div>\n      </div>\n      {turn === \"blue\" && (\n        <div css={styles.tabRow}>\n          <div onClick={() => setExpanded(!expanded)} css={styles.tab(turn, expanded)}>\n            <FontAwesomeIcon color={colors.purple} icon={[\"fad\", \"angle-up\"]} size=\"2x\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst radius = \"20px\";\n\nconst styles = {\n  tab: (turn, expanded) => {\n    const borderRadius =\n      turn === \"red\"\n        ? `border-top-left-radius: 50px; border-top-right-radius: 50px;`\n        : `border-bottom-left-radius: 50px; border-bottom-right-radius: 50px;`;\n    return css`\n      width: 100px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      ${borderRadius}\n      background-color: white;\n      height: 50px;\n      cursor: pointer;\n      svg {\n        transition: all ease-in-out 200ms;\n        transform: rotate(${expanded ? \"0\" : \"180deg\"});\n      }\n    `;\n  },\n  tabRow: css`\n    height: 50px;\n    display: flex;\n    justify-content: center;\n  `,\n  positionWrapper: (turn, expanded) => css`\n    position: fixed;\n    width: 100%;\n    transition: opacity ease-in-out 200ms;\n    ${turn === \"red\" ? \"bottom: 0px;\" : \"top: 0px;\"}\n    opacity: ${expanded ? \"1\" : \"0.3\"};\n    &:hover {\n      opacity: 1;\n    }\n  `,\n  outerPlayAreaWrapper: (turn, expanded) => {\n    const backgroundColor = turn === \"red\" ? colors.red : colors.blue;\n    const borderRadius =\n      turn === \"red\"\n        ? `border-top-left-radius: ${radius}; border-top-right-radius: ${radius};`\n        : `border-bottom-left-radius: ${radius}; border-bottom-right-radius: ${radius};`;\n    return css`\n      background-color: ${backgroundColor};\n      width: 100%;\n      height ${expanded ? \"300px\" : \"15vh\"};\n      transition: height ease-in-out 200ms;\n      ${borderRadius}\n    `;\n  },\n  innerPlayAreaWrapper: css`\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%;\n  `,\n  diceWrapper: expanded => css`\n    display: flex;\n    flex-direction: ${expanded ? \"column\" : \"row\"};\n    height: ${expanded ? \"200px\" : \"15vh\"};\n    width: 200px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: height ease-in-out 200ms;\n  `,\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useCallback, useMemo } from \"react\";\nimport { selectHaveRerolled, rerollGoldDie, rerollPurpleDie } from \"redux/slices/kingsBlessing/state\";\nimport { selectCanRedRerollDice, selectCanBlueRerollDice } from \"redux/slices/kingsBlessing/selection\";\nimport {\n  selectTurn,\n  selectPurpleDie,\n  selectGoldDie,\n  rollDice as rollDiceAction,\n  GoldDie,\n  PurpleDie,\n} from \"redux/slices/kingsBlessing/state\";\n\ntype DiceBooleans = { gold: boolean; purple: boolean };\ntype RedOrBlue = \"red\" | \"blue\";\ntype UseDiceResponse = {\n  turn: RedOrBlue;\n  goldDie: GoldDie;\n  purpleDie: PurpleDie;\n  canRerollPurple: boolean;\n  canRerollGold: boolean;\n  rollDice: () => void;\n  rerollGold: () => void;\n  rerollPurple: () => void;\n};\n\nexport default function useDice(): UseDiceResponse {\n  const dispatch = useDispatch();\n  const turn: RedOrBlue = useSelector(selectTurn);\n  const goldDie: GoldDie = useSelector(selectGoldDie);\n  const purpleDie: PurpleDie = useSelector(selectPurpleDie);\n  const haveRerolled: DiceBooleans = useSelector(selectHaveRerolled);\n  const redCanReroll: DiceBooleans = useSelector(selectCanRedRerollDice);\n  const blueCanReroll: DiceBooleans = useSelector(selectCanBlueRerollDice);\n  const currentRerollCapabilities = turn === \"red\" ? redCanReroll : blueCanReroll;\n\n  const canRerollPurple = !haveRerolled.purple && currentRerollCapabilities.purple;\n  const canRerollGold = !haveRerolled.gold && currentRerollCapabilities.gold;\n\n  const rollDice = useCallback(() => {\n    dispatch(rollDiceAction());\n  }, [dispatch]);\n\n  const rerollPurple = useCallback(() => {\n    dispatch(rerollPurpleDie());\n  }, [dispatch]);\n\n  const rerollGold = useCallback(() => {\n    dispatch(rerollGoldDie());\n  }, [dispatch]);\n\n  const memo: UseDiceResponse = useMemo((): UseDiceResponse => {\n    return { turn, goldDie, purpleDie, rollDice, canRerollPurple, canRerollGold, rerollPurple, rerollGold };\n  }, [turn, goldDie, purpleDie, rollDice, canRerollGold, canRerollPurple, rerollPurple, rerollGold]);\n\n  return memo;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nimport Center from \"./center\";\nimport Edge from \"./edge\";\nimport Fields from \"./fields\";\n\nimport Dice from \"./dice\";\n\nexport default function KingsBlessing() {\n  return (\n    <div css={wrapper}>\n      <Edge player=\"red\" />\n      <Fields player=\"red\" />\n      <Center />\n      <Fields player=\"blue\" />\n      <Edge player=\"blue\" />\n      <Dice />\n    </div>\n  );\n}\n\nconst wrapper = css`\n  height: 100vh;\n  background-color: hotpink;\n`;\n","import { createSlice } from \"redux-dogma\";\nimport { stateSlice } from \"./state\";\nimport { playerSelectionSlice } from \"./selection\";\n\nexport const kingsBlessingSlice = createSlice(\"kingsBlessing\")\n  .addSlice(stateSlice)\n  .addSlice(playerSelectionSlice);\n","import * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStoreAbstraction } from \"redux-dogma\";\n\nimport { kingsBlessingSlice } from \"./slices/kingsBlessing\";\n\nconst store = createStoreAbstraction()\n  .addSlice(kingsBlessingSlice)\n  .lockSideEffects()\n  .getStore();\n\nconst reduxProvider = ({ children }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport default reduxProvider;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fad, faCheckSquare, faTimes, faAngleDown, faAngleUp } from \"@fortawesome/pro-duotone-svg-icons\";\n\nlibrary.add(fad, faCheckSquare, faTimes, faAngleDown, faAngleUp);\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport KingsBlessing from \"./views/kingsBlessing\";\nimport Provider from \"./redux/provider\";\nimport { Global } from \"@emotion/core\";\nimport \"normalize.css\";\nimport { globalStyles } from \"theme\";\nimport \"./fontAwesome\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <Provider\n    children={\n      <>\n        <Global styles={[globalStyles]} />\n        <KingsBlessing />\n        <ToastContainer />\n      </>\n    }\n  ></Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}